//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_ConceptFilters_filters", "Filter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.Filter), "ConceptFilter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.ConceptFilter), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_Filters_FilterTypes", "FilterType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.FilterType), "Filter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.Filter), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_Schemes_HCTypes", "HCType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.HCType), "Scheme", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.Scheme), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositions_HCPositions", "HCPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.HCPosition), "HCPosition1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.HCPosition), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositions_HCTypes", "HCType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.HCType), "HCPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.HCPosition), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositions_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.Company), "HCPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.HCPosition), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_Schemes_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.Company), "Scheme", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.Scheme), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_Parameters_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.Company), "Parameter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.Parameter), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_Filters_Parameters", "Parameter", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.Parameter), "Filter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.Filter), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_Filters_Parameters1", "Parameter", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.Parameter), "Filter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.Filter), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_Parameters_ParameterDataType", "ParameterDataType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.ParameterDataType), "Parameter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.Parameter), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_Parameters_ParameterTypes", "ParameterType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.ParameterType), "Parameter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.Parameter), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlans_FiscalYears", "FiscalYear", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.FiscalYear), "SBForecastPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.SBForecastPlan), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanPositions_SBForecastPlans", "SBForecastPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.SBForecastPlan), "SBForecastPlanPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.SBForecastPlanPosition), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlans_SBForecastPlanStatuses", "SBForecastPlanStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.SBForecastPlanStatus), "SBForecastPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.SBForecastPlan), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanData_ParameterDataType", "ParameterDataType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.ParameterDataType), "SBForecastPlanData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.SBForecastPlanData), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanData_SBForecastPlanPositions", "SBForecastPlanPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.SBForecastPlanPosition), "SBForecastPlanData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.SBForecastPlanData), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_ParameterValues_FiscalYears", "FiscalYear", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.FiscalYear), "ParameterValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.ParameterValue), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_ParameterMonthValues_ParameterValues", "ParameterValue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.ParameterValue), "ParameterMonthValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.ParameterMonthValue), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_ParameterValues_Parameters", "Parameter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.Parameter), "ParameterValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.ParameterValue), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_ResultParameters_Parameters", "Parameter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.Parameter), "ResultParameter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.ResultParameter), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanModifiedGlobals_Parameters", "Parameter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.Parameter), "SBForecastPlanModifiedGlobal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.SBForecastPlanModifiedGlobal), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_ResultParameterMonthValues_ResultParameters", "ResultParameter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.ResultParameter), "ResultParameterMonthValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.ResultParameterMonthValue), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanModifiedGlobals_SBForecastPlans", "SBForecastPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.SBForecastPlan), "SBForecastPlanModifiedGlobal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.SBForecastPlanModifiedGlobal), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_ConceptFilters_Concepts", "Concept", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.Concept), "ConceptFilter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.ConceptFilter), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_GLAccounts", "GLAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.GLAccount), "Concept", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.Concept), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_OutputParameter1", "Parameter", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.Parameter), "Concept", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.Concept), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_OutputParameter2", "Parameter", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.Parameter), "Concept", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.Concept), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_Parameters1", "Parameter", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.Parameter), "Concept", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.Concept), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_Parameters2", "Parameter", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.Parameter), "Concept", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.Concept), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_Parameters3", "Parameter", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.Parameter), "Concept", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.Concept), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_Parameters4", "Parameter", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.Parameter), "Concept", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.Concept), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_Schemes", "Scheme", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.Scheme), "Concept", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.Concept), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_ConceptsValidMonths_Concepts", "Concept", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.Concept), "ConceptsValidMonth", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.ConceptsValidMonth), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_ExpenseTypes", "ExpenseType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.ExpenseType), "Concept", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.Concept), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_ExpenseTypes_ExpenseGroups", "ExpenseGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.ExpenseGroup), "ExpenseType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.ExpenseType), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.Company), "HCPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.HCPositionLog), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_HCPositions", "HCPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.HCPosition), "HCPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.HCPositionLog), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_HCPositions1", "HCPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.HCPosition), "HCPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.HCPositionLog), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_HCTypes", "HCType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.HCType), "HCPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.HCPositionLog), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanPositions_HCPositionLogs", "HCPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.HCPositionLog), "SBForecastPlanPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.SBForecastPlanPosition), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_ModifiedGlobalsMonthValues_SBForecastPlanModifiedGlobals", "SBForecastPlanModifiedGlobal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.SBForecastPlanModifiedGlobal), "ModifiedGlobalsMonthValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.ModifiedGlobalsMonthValue), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.Company), "SBForecastPlanAdjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.SBForecastPlanAdjustment), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_ExpenseTypes", "ExpenseType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.ExpenseType), "SBForecastPlanAdjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.SBForecastPlanAdjustment), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_GLAccounts", "GLAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.GLAccount), "SBForecastPlanAdjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.SBForecastPlanAdjustment), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_HCTypes", "HCType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.HCType), "SBForecastPlanAdjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.SBForecastPlanAdjustment), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_SBForecastPlans", "SBForecastPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.SBForecastPlan), "SBForecastPlanAdjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.SBForecastPlanAdjustment), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_CostCenters_Companies", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.Company), "CostCenter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.CostCenter), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_CostCenters", "CostCenter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.CostCenter), "HCPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.HCPositionLog), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositions_CostCenters", "CostCenter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.CostCenter), "HCPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.HCPosition), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_CostCenters", "CostCenter", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.CostCenter), "SBForecastPlanAdjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.SBForecastPlanAdjustment), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_EmployeeLogs_Employees", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.Employee), "EmployeeLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.EmployeeLog), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanPositions_EmployeeLogs", "EmployeeLog", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.EmployeeLog), "SBForecastPlanPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.SBForecastPlanPosition), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_Employees_HCPositions", "HCPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.HCPosition), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.Employee), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_Employees", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Engine.DataAccess.Employee), "HCPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.HCPositionLog), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_Lobs", "Lob", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.Lob), "HCPositionLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.HCPositionLog), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositions_Lobs", "Lob", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.Lob), "HCPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.HCPosition), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_Lobs", "Lob", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.Lob), "SBForecastPlanAdjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.SBForecastPlanAdjustment), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_Lobs1", "Lob", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.Lob), "SBForecastPlanAdjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.SBForecastPlanAdjustment), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_ConceptResults_Concepts", "Concept", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.Concept), "ConceptResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.ConceptResult), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_ConceptResults_SBForecastPlanPositions", "SBForecastPlanPosition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.SBForecastPlanPosition), "ConceptResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.ConceptResult), true)]
[assembly: EdmRelationshipAttribute("DisneyHCMLatamPlanningDevModel", "FK_ResultParameters_ConceptResults", "ConceptResult", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Engine.DataAccess.ConceptResult), "ResultParameter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Engine.DataAccess.ResultParameter), true)]

#endregion

namespace Engine.DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DisneyHCMLatamPlanningEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DisneyHCMLatamPlanningEntities object using the connection string found in the 'DisneyHCMLatamPlanningEntities' section of the application configuration file.
        /// </summary>
        public DisneyHCMLatamPlanningEntities() : base("name=DisneyHCMLatamPlanningEntities", "DisneyHCMLatamPlanningEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DisneyHCMLatamPlanningEntities object.
        /// </summary>
        public DisneyHCMLatamPlanningEntities(string connectionString) : base(connectionString, "DisneyHCMLatamPlanningEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DisneyHCMLatamPlanningEntities object.
        /// </summary>
        public DisneyHCMLatamPlanningEntities(EntityConnection connection) : base(connection, "DisneyHCMLatamPlanningEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConceptFilter> ConceptFilters
        {
            get
            {
                if ((_ConceptFilters == null))
                {
                    _ConceptFilters = base.CreateObjectSet<ConceptFilter>("ConceptFilters");
                }
                return _ConceptFilters;
            }
        }
        private ObjectSet<ConceptFilter> _ConceptFilters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Filter> Filters
        {
            get
            {
                if ((_Filters == null))
                {
                    _Filters = base.CreateObjectSet<Filter>("Filters");
                }
                return _Filters;
            }
        }
        private ObjectSet<Filter> _Filters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FilterType> FilterTypes
        {
            get
            {
                if ((_FilterTypes == null))
                {
                    _FilterTypes = base.CreateObjectSet<FilterType>("FilterTypes");
                }
                return _FilterTypes;
            }
        }
        private ObjectSet<FilterType> _FilterTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GLAccount> GLAccounts
        {
            get
            {
                if ((_GLAccounts == null))
                {
                    _GLAccounts = base.CreateObjectSet<GLAccount>("GLAccounts");
                }
                return _GLAccounts;
            }
        }
        private ObjectSet<GLAccount> _GLAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HCType> HCTypes
        {
            get
            {
                if ((_HCTypes == null))
                {
                    _HCTypes = base.CreateObjectSet<HCType>("HCTypes");
                }
                return _HCTypes;
            }
        }
        private ObjectSet<HCType> _HCTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParameterType> ParameterTypes
        {
            get
            {
                if ((_ParameterTypes == null))
                {
                    _ParameterTypes = base.CreateObjectSet<ParameterType>("ParameterTypes");
                }
                return _ParameterTypes;
            }
        }
        private ObjectSet<ParameterType> _ParameterTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SBForecastPlanPosition> SBForecastPlanPositions
        {
            get
            {
                if ((_SBForecastPlanPositions == null))
                {
                    _SBForecastPlanPositions = base.CreateObjectSet<SBForecastPlanPosition>("SBForecastPlanPositions");
                }
                return _SBForecastPlanPositions;
            }
        }
        private ObjectSet<SBForecastPlanPosition> _SBForecastPlanPositions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SBForecastPlanStatus> SBForecastPlanStatuses
        {
            get
            {
                if ((_SBForecastPlanStatuses == null))
                {
                    _SBForecastPlanStatuses = base.CreateObjectSet<SBForecastPlanStatus>("SBForecastPlanStatuses");
                }
                return _SBForecastPlanStatuses;
            }
        }
        private ObjectSet<SBForecastPlanStatus> _SBForecastPlanStatuses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Scheme> Schemes
        {
            get
            {
                if ((_Schemes == null))
                {
                    _Schemes = base.CreateObjectSet<Scheme>("Schemes");
                }
                return _Schemes;
            }
        }
        private ObjectSet<Scheme> _Schemes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HCPosition> HCPositions
        {
            get
            {
                if ((_HCPositions == null))
                {
                    _HCPositions = base.CreateObjectSet<HCPosition>("HCPositions");
                }
                return _HCPositions;
            }
        }
        private ObjectSet<HCPosition> _HCPositions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParameterDataType> ParameterDataTypes
        {
            get
            {
                if ((_ParameterDataTypes == null))
                {
                    _ParameterDataTypes = base.CreateObjectSet<ParameterDataType>("ParameterDataTypes");
                }
                return _ParameterDataTypes;
            }
        }
        private ObjectSet<ParameterDataType> _ParameterDataTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Parameter> Parameters
        {
            get
            {
                if ((_Parameters == null))
                {
                    _Parameters = base.CreateObjectSet<Parameter>("Parameters");
                }
                return _Parameters;
            }
        }
        private ObjectSet<Parameter> _Parameters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FiscalYear> FiscalYears
        {
            get
            {
                if ((_FiscalYears == null))
                {
                    _FiscalYears = base.CreateObjectSet<FiscalYear>("FiscalYears");
                }
                return _FiscalYears;
            }
        }
        private ObjectSet<FiscalYear> _FiscalYears;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SBForecastPlan> SBForecastPlans
        {
            get
            {
                if ((_SBForecastPlans == null))
                {
                    _SBForecastPlans = base.CreateObjectSet<SBForecastPlan>("SBForecastPlans");
                }
                return _SBForecastPlans;
            }
        }
        private ObjectSet<SBForecastPlan> _SBForecastPlans;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SBForecastPlanData> SBForecastPlanDatas
        {
            get
            {
                if ((_SBForecastPlanDatas == null))
                {
                    _SBForecastPlanDatas = base.CreateObjectSet<SBForecastPlanData>("SBForecastPlanDatas");
                }
                return _SBForecastPlanDatas;
            }
        }
        private ObjectSet<SBForecastPlanData> _SBForecastPlanDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParameterMonthValue> ParameterMonthValues
        {
            get
            {
                if ((_ParameterMonthValues == null))
                {
                    _ParameterMonthValues = base.CreateObjectSet<ParameterMonthValue>("ParameterMonthValues");
                }
                return _ParameterMonthValues;
            }
        }
        private ObjectSet<ParameterMonthValue> _ParameterMonthValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParameterValue> ParameterValues
        {
            get
            {
                if ((_ParameterValues == null))
                {
                    _ParameterValues = base.CreateObjectSet<ParameterValue>("ParameterValues");
                }
                return _ParameterValues;
            }
        }
        private ObjectSet<ParameterValue> _ParameterValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResultParameterMonthValue> ResultParameterMonthValues
        {
            get
            {
                if ((_ResultParameterMonthValues == null))
                {
                    _ResultParameterMonthValues = base.CreateObjectSet<ResultParameterMonthValue>("ResultParameterMonthValues");
                }
                return _ResultParameterMonthValues;
            }
        }
        private ObjectSet<ResultParameterMonthValue> _ResultParameterMonthValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResultParameter> ResultParameters
        {
            get
            {
                if ((_ResultParameters == null))
                {
                    _ResultParameters = base.CreateObjectSet<ResultParameter>("ResultParameters");
                }
                return _ResultParameters;
            }
        }
        private ObjectSet<ResultParameter> _ResultParameters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SBForecastPlanModifiedGlobal> SBForecastPlanModifiedGlobals
        {
            get
            {
                if ((_SBForecastPlanModifiedGlobals == null))
                {
                    _SBForecastPlanModifiedGlobals = base.CreateObjectSet<SBForecastPlanModifiedGlobal>("SBForecastPlanModifiedGlobals");
                }
                return _SBForecastPlanModifiedGlobals;
            }
        }
        private ObjectSet<SBForecastPlanModifiedGlobal> _SBForecastPlanModifiedGlobals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Concept> Concepts
        {
            get
            {
                if ((_Concepts == null))
                {
                    _Concepts = base.CreateObjectSet<Concept>("Concepts");
                }
                return _Concepts;
            }
        }
        private ObjectSet<Concept> _Concepts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConceptsValidMonth> ConceptsValidMonths
        {
            get
            {
                if ((_ConceptsValidMonths == null))
                {
                    _ConceptsValidMonths = base.CreateObjectSet<ConceptsValidMonth>("ConceptsValidMonths");
                }
                return _ConceptsValidMonths;
            }
        }
        private ObjectSet<ConceptsValidMonth> _ConceptsValidMonths;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SBForecastPlanLog> SBForecastPlanLogs
        {
            get
            {
                if ((_SBForecastPlanLogs == null))
                {
                    _SBForecastPlanLogs = base.CreateObjectSet<SBForecastPlanLog>("SBForecastPlanLogs");
                }
                return _SBForecastPlanLogs;
            }
        }
        private ObjectSet<SBForecastPlanLog> _SBForecastPlanLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExpenseType> ExpenseTypes
        {
            get
            {
                if ((_ExpenseTypes == null))
                {
                    _ExpenseTypes = base.CreateObjectSet<ExpenseType>("ExpenseTypes");
                }
                return _ExpenseTypes;
            }
        }
        private ObjectSet<ExpenseType> _ExpenseTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExpenseGroup> ExpenseGroups
        {
            get
            {
                if ((_ExpenseGroups == null))
                {
                    _ExpenseGroups = base.CreateObjectSet<ExpenseGroup>("ExpenseGroups");
                }
                return _ExpenseGroups;
            }
        }
        private ObjectSet<ExpenseGroup> _ExpenseGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HCPositionLog> HCPositionLogs
        {
            get
            {
                if ((_HCPositionLogs == null))
                {
                    _HCPositionLogs = base.CreateObjectSet<HCPositionLog>("HCPositionLogs");
                }
                return _HCPositionLogs;
            }
        }
        private ObjectSet<HCPositionLog> _HCPositionLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ModifiedGlobalsMonthValue> ModifiedGlobalsMonthValues
        {
            get
            {
                if ((_ModifiedGlobalsMonthValues == null))
                {
                    _ModifiedGlobalsMonthValues = base.CreateObjectSet<ModifiedGlobalsMonthValue>("ModifiedGlobalsMonthValues");
                }
                return _ModifiedGlobalsMonthValues;
            }
        }
        private ObjectSet<ModifiedGlobalsMonthValue> _ModifiedGlobalsMonthValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SBForecastPlanAdjustment> SBForecastPlanAdjustments
        {
            get
            {
                if ((_SBForecastPlanAdjustments == null))
                {
                    _SBForecastPlanAdjustments = base.CreateObjectSet<SBForecastPlanAdjustment>("SBForecastPlanAdjustments");
                }
                return _SBForecastPlanAdjustments;
            }
        }
        private ObjectSet<SBForecastPlanAdjustment> _SBForecastPlanAdjustments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CostCenter> CostCenters
        {
            get
            {
                if ((_CostCenters == null))
                {
                    _CostCenters = base.CreateObjectSet<CostCenter>("CostCenters");
                }
                return _CostCenters;
            }
        }
        private ObjectSet<CostCenter> _CostCenters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeLog> EmployeeLogs
        {
            get
            {
                if ((_EmployeeLogs == null))
                {
                    _EmployeeLogs = base.CreateObjectSet<EmployeeLog>("EmployeeLogs");
                }
                return _EmployeeLogs;
            }
        }
        private ObjectSet<EmployeeLog> _EmployeeLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lob> Lobs
        {
            get
            {
                if ((_Lobs == null))
                {
                    _Lobs = base.CreateObjectSet<Lob>("Lobs");
                }
                return _Lobs;
            }
        }
        private ObjectSet<Lob> _Lobs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConceptResult> ConceptResults
        {
            get
            {
                if ((_ConceptResults == null))
                {
                    _ConceptResults = base.CreateObjectSet<ConceptResult>("ConceptResults");
                }
                return _ConceptResults;
            }
        }
        private ObjectSet<ConceptResult> _ConceptResults;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConceptFilters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConceptFilters(ConceptFilter conceptFilter)
        {
            base.AddObject("ConceptFilters", conceptFilter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Filters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFilters(Filter filter)
        {
            base.AddObject("Filters", filter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FilterTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFilterTypes(FilterType filterType)
        {
            base.AddObject("FilterTypes", filterType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GLAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGLAccounts(GLAccount gLAccount)
        {
            base.AddObject("GLAccounts", gLAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HCTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHCTypes(HCType hCType)
        {
            base.AddObject("HCTypes", hCType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParameterTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParameterTypes(ParameterType parameterType)
        {
            base.AddObject("ParameterTypes", parameterType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SBForecastPlanPositions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSBForecastPlanPositions(SBForecastPlanPosition sBForecastPlanPosition)
        {
            base.AddObject("SBForecastPlanPositions", sBForecastPlanPosition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SBForecastPlanStatuses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSBForecastPlanStatuses(SBForecastPlanStatus sBForecastPlanStatus)
        {
            base.AddObject("SBForecastPlanStatuses", sBForecastPlanStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Schemes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSchemes(Scheme scheme)
        {
            base.AddObject("Schemes", scheme);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HCPositions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHCPositions(HCPosition hCPosition)
        {
            base.AddObject("HCPositions", hCPosition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParameterDataTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParameterDataTypes(ParameterDataType parameterDataType)
        {
            base.AddObject("ParameterDataTypes", parameterDataType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParameters(Parameter parameter)
        {
            base.AddObject("Parameters", parameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FiscalYears EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFiscalYears(FiscalYear fiscalYear)
        {
            base.AddObject("FiscalYears", fiscalYear);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SBForecastPlans EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSBForecastPlans(SBForecastPlan sBForecastPlan)
        {
            base.AddObject("SBForecastPlans", sBForecastPlan);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SBForecastPlanDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSBForecastPlanDatas(SBForecastPlanData sBForecastPlanData)
        {
            base.AddObject("SBForecastPlanDatas", sBForecastPlanData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParameterMonthValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParameterMonthValues(ParameterMonthValue parameterMonthValue)
        {
            base.AddObject("ParameterMonthValues", parameterMonthValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParameterValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParameterValues(ParameterValue parameterValue)
        {
            base.AddObject("ParameterValues", parameterValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResultParameterMonthValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResultParameterMonthValues(ResultParameterMonthValue resultParameterMonthValue)
        {
            base.AddObject("ResultParameterMonthValues", resultParameterMonthValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResultParameters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResultParameters(ResultParameter resultParameter)
        {
            base.AddObject("ResultParameters", resultParameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SBForecastPlanModifiedGlobals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSBForecastPlanModifiedGlobals(SBForecastPlanModifiedGlobal sBForecastPlanModifiedGlobal)
        {
            base.AddObject("SBForecastPlanModifiedGlobals", sBForecastPlanModifiedGlobal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Concepts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConcepts(Concept concept)
        {
            base.AddObject("Concepts", concept);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConceptsValidMonths EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConceptsValidMonths(ConceptsValidMonth conceptsValidMonth)
        {
            base.AddObject("ConceptsValidMonths", conceptsValidMonth);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SBForecastPlanLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSBForecastPlanLogs(SBForecastPlanLog sBForecastPlanLog)
        {
            base.AddObject("SBForecastPlanLogs", sBForecastPlanLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExpenseTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpenseTypes(ExpenseType expenseType)
        {
            base.AddObject("ExpenseTypes", expenseType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExpenseGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpenseGroups(ExpenseGroup expenseGroup)
        {
            base.AddObject("ExpenseGroups", expenseGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HCPositionLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHCPositionLogs(HCPositionLog hCPositionLog)
        {
            base.AddObject("HCPositionLogs", hCPositionLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ModifiedGlobalsMonthValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModifiedGlobalsMonthValues(ModifiedGlobalsMonthValue modifiedGlobalsMonthValue)
        {
            base.AddObject("ModifiedGlobalsMonthValues", modifiedGlobalsMonthValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SBForecastPlanAdjustments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSBForecastPlanAdjustments(SBForecastPlanAdjustment sBForecastPlanAdjustment)
        {
            base.AddObject("SBForecastPlanAdjustments", sBForecastPlanAdjustment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CostCenters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCostCenters(CostCenter costCenter)
        {
            base.AddObject("CostCenters", costCenter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeLogs(EmployeeLog employeeLog)
        {
            base.AddObject("EmployeeLogs", employeeLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLobs(Lob lob)
        {
            base.AddObject("Lobs", lob);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConceptResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConceptResults(ConceptResult conceptResult)
        {
            base.AddObject("ConceptResults", conceptResult);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="planId">No Metadata Documentation available.</param>
        public int AddCurrentPositionsToSBForecastPlan(Nullable<global::System.Int32> planId)
        {
            ObjectParameter planIdParameter;
            if (planId.HasValue)
            {
                planIdParameter = new ObjectParameter("PlanId", planId);
            }
            else
            {
                planIdParameter = new ObjectParameter("PlanId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AddCurrentPositionsToSBForecastPlan", planIdParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="territoryID">Initial value of the TerritoryID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Company CreateCompany(global::System.Int32 companyID, global::System.String code, global::System.String description, global::System.Int32 territoryID, global::System.Boolean isActive)
        {
            Company company = new Company();
            company.CompanyID = companyID;
            company.Code = code;
            company.Description = description;
            company.TerritoryID = territoryID;
            company.IsActive = isActive;
            return company;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TerritoryID
        {
            get
            {
                return _TerritoryID;
            }
            set
            {
                OnTerritoryIDChanging(value);
                ReportPropertyChanging("TerritoryID");
                _TerritoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TerritoryID");
                OnTerritoryIDChanged();
            }
        }
        private global::System.Int32 _TerritoryID;
        partial void OnTerritoryIDChanging(global::System.Int32 value);
        partial void OnTerritoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositions_Companies", "HCPosition")]
        public EntityCollection<HCPosition> HCPositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_Companies", "HCPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_Companies", "HCPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Schemes_Companies", "Scheme")]
        public EntityCollection<Scheme> Schemes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Scheme>("DisneyHCMLatamPlanningDevModel.FK_Schemes_Companies", "Scheme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Scheme>("DisneyHCMLatamPlanningDevModel.FK_Schemes_Companies", "Scheme", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Parameters_Companies", "Parameter")]
        public EntityCollection<Parameter> Parameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Parameters_Companies", "Parameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Parameters_Companies", "Parameter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_Companies", "HCPositionLog")]
        public EntityCollection<HCPositionLog> HCPositionLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCPositionLog>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_Companies", "HCPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCPositionLog>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_Companies", "HCPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_Companies", "SBForecastPlanAdjustment")]
        public EntityCollection<SBForecastPlanAdjustment> SBForecastPlanAdjustments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SBForecastPlanAdjustment>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_Companies", "SBForecastPlanAdjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SBForecastPlanAdjustment>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_Companies", "SBForecastPlanAdjustment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_CostCenters_Companies", "CostCenter")]
        public EntityCollection<CostCenter> CostCenters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CostCenter>("DisneyHCMLatamPlanningDevModel.FK_CostCenters_Companies", "CostCenter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CostCenter>("DisneyHCMLatamPlanningDevModel.FK_CostCenters_Companies", "CostCenter", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="Concept")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Concept : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Concept object.
        /// </summary>
        /// <param name="conceptId">Initial value of the ConceptId property.</param>
        /// <param name="schemaId">Initial value of the SchemaId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="sequence">Initial value of the Sequence property.</param>
        public static Concept CreateConcept(global::System.Int32 conceptId, global::System.Int32 schemaId, global::System.String title, global::System.String description, global::System.Int32 sequence)
        {
            Concept concept = new Concept();
            concept.ConceptId = conceptId;
            concept.SchemaId = schemaId;
            concept.Title = title;
            concept.Description = description;
            concept.Sequence = sequence;
            return concept;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConceptId
        {
            get
            {
                return _ConceptId;
            }
            set
            {
                if (_ConceptId != value)
                {
                    OnConceptIdChanging(value);
                    ReportPropertyChanging("ConceptId");
                    _ConceptId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConceptId");
                    OnConceptIdChanged();
                }
            }
        }
        private global::System.Int32 _ConceptId;
        partial void OnConceptIdChanging(global::System.Int32 value);
        partial void OnConceptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SchemaId
        {
            get
            {
                return _SchemaId;
            }
            set
            {
                OnSchemaIdChanging(value);
                ReportPropertyChanging("SchemaId");
                _SchemaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SchemaId");
                OnSchemaIdChanged();
            }
        }
        private global::System.Int32 _SchemaId;
        partial void OnSchemaIdChanging(global::System.Int32 value);
        partial void OnSchemaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ExpenseTypeId
        {
            get
            {
                return _ExpenseTypeId;
            }
            set
            {
                OnExpenseTypeIdChanging(value);
                ReportPropertyChanging("ExpenseTypeId");
                _ExpenseTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpenseTypeId");
                OnExpenseTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ExpenseTypeId;
        partial void OnExpenseTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnExpenseTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private global::System.Int32 _Sequence;
        partial void OnSequenceChanging(global::System.Int32 value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GLAccountID
        {
            get
            {
                return _GLAccountID;
            }
            set
            {
                OnGLAccountIDChanging(value);
                ReportPropertyChanging("GLAccountID");
                _GLAccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GLAccountID");
                OnGLAccountIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GLAccountID;
        partial void OnGLAccountIDChanging(Nullable<global::System.Int32> value);
        partial void OnGLAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Parameter1Id
        {
            get
            {
                return _Parameter1Id;
            }
            set
            {
                OnParameter1IdChanging(value);
                ReportPropertyChanging("Parameter1Id");
                _Parameter1Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Parameter1Id");
                OnParameter1IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Parameter1Id;
        partial void OnParameter1IdChanging(Nullable<global::System.Int32> value);
        partial void OnParameter1IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Parameter2Id
        {
            get
            {
                return _Parameter2Id;
            }
            set
            {
                OnParameter2IdChanging(value);
                ReportPropertyChanging("Parameter2Id");
                _Parameter2Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Parameter2Id");
                OnParameter2IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Parameter2Id;
        partial void OnParameter2IdChanging(Nullable<global::System.Int32> value);
        partial void OnParameter2IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Parameter3Id
        {
            get
            {
                return _Parameter3Id;
            }
            set
            {
                OnParameter3IdChanging(value);
                ReportPropertyChanging("Parameter3Id");
                _Parameter3Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Parameter3Id");
                OnParameter3IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Parameter3Id;
        partial void OnParameter3IdChanging(Nullable<global::System.Int32> value);
        partial void OnParameter3IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Parameter4Id
        {
            get
            {
                return _Parameter4Id;
            }
            set
            {
                OnParameter4IdChanging(value);
                ReportPropertyChanging("Parameter4Id");
                _Parameter4Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Parameter4Id");
                OnParameter4IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Parameter4Id;
        partial void OnParameter4IdChanging(Nullable<global::System.Int32> value);
        partial void OnParameter4IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Operation
        {
            get
            {
                return _Operation;
            }
            set
            {
                OnOperationChanging(value);
                ReportPropertyChanging("Operation");
                _Operation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Operation");
                OnOperationChanged();
            }
        }
        private global::System.String _Operation;
        partial void OnOperationChanging(global::System.String value);
        partial void OnOperationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OutputParameter1Id
        {
            get
            {
                return _OutputParameter1Id;
            }
            set
            {
                OnOutputParameter1IdChanging(value);
                ReportPropertyChanging("OutputParameter1Id");
                _OutputParameter1Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutputParameter1Id");
                OnOutputParameter1IdChanged();
            }
        }
        private Nullable<global::System.Int32> _OutputParameter1Id;
        partial void OnOutputParameter1IdChanging(Nullable<global::System.Int32> value);
        partial void OnOutputParameter1IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OutputParameter2Id
        {
            get
            {
                return _OutputParameter2Id;
            }
            set
            {
                OnOutputParameter2IdChanging(value);
                ReportPropertyChanging("OutputParameter2Id");
                _OutputParameter2Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OutputParameter2Id");
                OnOutputParameter2IdChanged();
            }
        }
        private Nullable<global::System.Int32> _OutputParameter2Id;
        partial void OnOutputParameter2IdChanging(Nullable<global::System.Int32> value);
        partial void OnOutputParameter2IdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ConceptFilters_Concepts", "ConceptFilter")]
        public EntityCollection<ConceptFilter> ConceptFilters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConceptFilter>("DisneyHCMLatamPlanningDevModel.FK_ConceptFilters_Concepts", "ConceptFilter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConceptFilter>("DisneyHCMLatamPlanningDevModel.FK_ConceptFilters_Concepts", "ConceptFilter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_GLAccounts", "GLAccount")]
        public GLAccount GLAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GLAccount>("DisneyHCMLatamPlanningDevModel.FK_Concepts_GLAccounts", "GLAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GLAccount>("DisneyHCMLatamPlanningDevModel.FK_Concepts_GLAccounts", "GLAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GLAccount> GLAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GLAccount>("DisneyHCMLatamPlanningDevModel.FK_Concepts_GLAccounts", "GLAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GLAccount>("DisneyHCMLatamPlanningDevModel.FK_Concepts_GLAccounts", "GLAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_OutputParameter1", "Parameter")]
        public Parameter Output1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_OutputParameter1", "Parameter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_OutputParameter1", "Parameter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parameter> Output1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_OutputParameter1", "Parameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_OutputParameter1", "Parameter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_OutputParameter2", "Parameter")]
        public Parameter Output2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_OutputParameter2", "Parameter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_OutputParameter2", "Parameter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parameter> Output2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_OutputParameter2", "Parameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_OutputParameter2", "Parameter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_Parameters1", "Parameter")]
        public Parameter Parameter1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters1", "Parameter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters1", "Parameter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parameter> Parameter1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters1", "Parameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters1", "Parameter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_Parameters2", "Parameter")]
        public Parameter Parameter2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters2", "Parameter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters2", "Parameter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parameter> Parameter2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters2", "Parameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters2", "Parameter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_Parameters3", "Parameter")]
        public Parameter Parameter3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters3", "Parameter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters3", "Parameter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parameter> Parameter3Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters3", "Parameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters3", "Parameter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_Parameters4", "Parameter")]
        public Parameter Parameter4
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters4", "Parameter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters4", "Parameter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parameter> Parameter4Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters4", "Parameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters4", "Parameter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_Schemes", "Scheme")]
        public Scheme Scheme
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Scheme>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Schemes", "Scheme").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Scheme>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Schemes", "Scheme").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Scheme> SchemeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Scheme>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Schemes", "Scheme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Scheme>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Schemes", "Scheme", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ConceptsValidMonths_Concepts", "ConceptsValidMonth")]
        public EntityCollection<ConceptsValidMonth> ConceptsValidMonths
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConceptsValidMonth>("DisneyHCMLatamPlanningDevModel.FK_ConceptsValidMonths_Concepts", "ConceptsValidMonth");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConceptsValidMonth>("DisneyHCMLatamPlanningDevModel.FK_ConceptsValidMonths_Concepts", "ConceptsValidMonth", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_ExpenseTypes", "ExpenseType")]
        public ExpenseType ExpenseType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("DisneyHCMLatamPlanningDevModel.FK_Concepts_ExpenseTypes", "ExpenseType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("DisneyHCMLatamPlanningDevModel.FK_Concepts_ExpenseTypes", "ExpenseType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseType> ExpenseTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("DisneyHCMLatamPlanningDevModel.FK_Concepts_ExpenseTypes", "ExpenseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseType>("DisneyHCMLatamPlanningDevModel.FK_Concepts_ExpenseTypes", "ExpenseType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ConceptResults_Concepts", "ConceptResult")]
        public EntityCollection<ConceptResult> ConceptResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConceptResult>("DisneyHCMLatamPlanningDevModel.FK_ConceptResults_Concepts", "ConceptResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConceptResult>("DisneyHCMLatamPlanningDevModel.FK_ConceptResults_Concepts", "ConceptResult", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="ConceptFilter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConceptFilter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConceptFilter object.
        /// </summary>
        /// <param name="conceptFilterId">Initial value of the ConceptFilterId property.</param>
        /// <param name="conceptId">Initial value of the ConceptId property.</param>
        /// <param name="filterId">Initial value of the FilterId property.</param>
        public static ConceptFilter CreateConceptFilter(global::System.Int32 conceptFilterId, global::System.Int32 conceptId, global::System.Int32 filterId)
        {
            ConceptFilter conceptFilter = new ConceptFilter();
            conceptFilter.ConceptFilterId = conceptFilterId;
            conceptFilter.ConceptId = conceptId;
            conceptFilter.FilterId = filterId;
            return conceptFilter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConceptFilterId
        {
            get
            {
                return _ConceptFilterId;
            }
            set
            {
                if (_ConceptFilterId != value)
                {
                    OnConceptFilterIdChanging(value);
                    ReportPropertyChanging("ConceptFilterId");
                    _ConceptFilterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConceptFilterId");
                    OnConceptFilterIdChanged();
                }
            }
        }
        private global::System.Int32 _ConceptFilterId;
        partial void OnConceptFilterIdChanging(global::System.Int32 value);
        partial void OnConceptFilterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConceptId
        {
            get
            {
                return _ConceptId;
            }
            set
            {
                OnConceptIdChanging(value);
                ReportPropertyChanging("ConceptId");
                _ConceptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConceptId");
                OnConceptIdChanged();
            }
        }
        private global::System.Int32 _ConceptId;
        partial void OnConceptIdChanging(global::System.Int32 value);
        partial void OnConceptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FilterId
        {
            get
            {
                return _FilterId;
            }
            set
            {
                OnFilterIdChanging(value);
                ReportPropertyChanging("FilterId");
                _FilterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FilterId");
                OnFilterIdChanged();
            }
        }
        private global::System.Int32 _FilterId;
        partial void OnFilterIdChanging(global::System.Int32 value);
        partial void OnFilterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Sequence
        {
            get
            {
                return _Sequence;
            }
            set
            {
                OnSequenceChanging(value);
                ReportPropertyChanging("Sequence");
                _Sequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sequence");
                OnSequenceChanged();
            }
        }
        private Nullable<global::System.Int32> _Sequence;
        partial void OnSequenceChanging(Nullable<global::System.Int32> value);
        partial void OnSequenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Connector
        {
            get
            {
                return _Connector;
            }
            set
            {
                OnConnectorChanging(value);
                ReportPropertyChanging("Connector");
                _Connector = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Connector");
                OnConnectorChanged();
            }
        }
        private global::System.String _Connector;
        partial void OnConnectorChanging(global::System.String value);
        partial void OnConnectorChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ConceptFilters_filters", "Filter")]
        public Filter Filter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Filter>("DisneyHCMLatamPlanningDevModel.FK_ConceptFilters_filters", "Filter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Filter>("DisneyHCMLatamPlanningDevModel.FK_ConceptFilters_filters", "Filter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Filter> FilterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Filter>("DisneyHCMLatamPlanningDevModel.FK_ConceptFilters_filters", "Filter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Filter>("DisneyHCMLatamPlanningDevModel.FK_ConceptFilters_filters", "Filter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ConceptFilters_Concepts", "Concept")]
        public Concept Concept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Concept>("DisneyHCMLatamPlanningDevModel.FK_ConceptFilters_Concepts", "Concept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Concept>("DisneyHCMLatamPlanningDevModel.FK_ConceptFilters_Concepts", "Concept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Concept> ConceptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Concept>("DisneyHCMLatamPlanningDevModel.FK_ConceptFilters_Concepts", "Concept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Concept>("DisneyHCMLatamPlanningDevModel.FK_ConceptFilters_Concepts", "Concept", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="ConceptResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConceptResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConceptResult object.
        /// </summary>
        /// <param name="conceptResultId">Initial value of the ConceptResultId property.</param>
        /// <param name="sBForecastPlanPositionId">Initial value of the SBForecastPlanPositionId property.</param>
        /// <param name="conceptId">Initial value of the ConceptId property.</param>
        /// <param name="calendarMonthId">Initial value of the CalendarMonthId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static ConceptResult CreateConceptResult(global::System.Int32 conceptResultId, global::System.Int32 sBForecastPlanPositionId, global::System.Int32 conceptId, global::System.Int32 calendarMonthId, global::System.Byte[] value)
        {
            ConceptResult conceptResult = new ConceptResult();
            conceptResult.ConceptResultId = conceptResultId;
            conceptResult.SBForecastPlanPositionId = sBForecastPlanPositionId;
            conceptResult.ConceptId = conceptId;
            conceptResult.CalendarMonthId = calendarMonthId;
            conceptResult.Value = value;
            return conceptResult;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConceptResultId
        {
            get
            {
                return _ConceptResultId;
            }
            set
            {
                if (_ConceptResultId != value)
                {
                    OnConceptResultIdChanging(value);
                    ReportPropertyChanging("ConceptResultId");
                    _ConceptResultId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConceptResultId");
                    OnConceptResultIdChanged();
                }
            }
        }
        private global::System.Int32 _ConceptResultId;
        partial void OnConceptResultIdChanging(global::System.Int32 value);
        partial void OnConceptResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SBForecastPlanPositionId
        {
            get
            {
                return _SBForecastPlanPositionId;
            }
            set
            {
                OnSBForecastPlanPositionIdChanging(value);
                ReportPropertyChanging("SBForecastPlanPositionId");
                _SBForecastPlanPositionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SBForecastPlanPositionId");
                OnSBForecastPlanPositionIdChanged();
            }
        }
        private global::System.Int32 _SBForecastPlanPositionId;
        partial void OnSBForecastPlanPositionIdChanging(global::System.Int32 value);
        partial void OnSBForecastPlanPositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConceptId
        {
            get
            {
                return _ConceptId;
            }
            set
            {
                OnConceptIdChanging(value);
                ReportPropertyChanging("ConceptId");
                _ConceptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConceptId");
                OnConceptIdChanged();
            }
        }
        private global::System.Int32 _ConceptId;
        partial void OnConceptIdChanging(global::System.Int32 value);
        partial void OnConceptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalendarMonthId
        {
            get
            {
                return _CalendarMonthId;
            }
            set
            {
                OnCalendarMonthIdChanging(value);
                ReportPropertyChanging("CalendarMonthId");
                _CalendarMonthId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CalendarMonthId");
                OnCalendarMonthIdChanged();
            }
        }
        private global::System.Int32 _CalendarMonthId;
        partial void OnCalendarMonthIdChanging(global::System.Int32 value);
        partial void OnCalendarMonthIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Value
        {
            get
            {
                return StructuralObject.GetValidValue(_Value);
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Byte[] _Value;
        partial void OnValueChanging(global::System.Byte[] value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ConceptResults_Concepts", "Concept")]
        public Concept Concept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Concept>("DisneyHCMLatamPlanningDevModel.FK_ConceptResults_Concepts", "Concept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Concept>("DisneyHCMLatamPlanningDevModel.FK_ConceptResults_Concepts", "Concept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Concept> ConceptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Concept>("DisneyHCMLatamPlanningDevModel.FK_ConceptResults_Concepts", "Concept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Concept>("DisneyHCMLatamPlanningDevModel.FK_ConceptResults_Concepts", "Concept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ConceptResults_SBForecastPlanPositions", "SBForecastPlanPosition")]
        public SBForecastPlanPosition SBForecastPlanPosition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlanPosition>("DisneyHCMLatamPlanningDevModel.FK_ConceptResults_SBForecastPlanPositions", "SBForecastPlanPosition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlanPosition>("DisneyHCMLatamPlanningDevModel.FK_ConceptResults_SBForecastPlanPositions", "SBForecastPlanPosition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SBForecastPlanPosition> SBForecastPlanPositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlanPosition>("DisneyHCMLatamPlanningDevModel.FK_ConceptResults_SBForecastPlanPositions", "SBForecastPlanPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SBForecastPlanPosition>("DisneyHCMLatamPlanningDevModel.FK_ConceptResults_SBForecastPlanPositions", "SBForecastPlanPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ResultParameters_ConceptResults", "ResultParameter")]
        public EntityCollection<ResultParameter> ResultParameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResultParameter>("DisneyHCMLatamPlanningDevModel.FK_ResultParameters_ConceptResults", "ResultParameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResultParameter>("DisneyHCMLatamPlanningDevModel.FK_ResultParameters_ConceptResults", "ResultParameter", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="ConceptsValidMonth")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConceptsValidMonth : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConceptsValidMonth object.
        /// </summary>
        /// <param name="conceptValidMonthId">Initial value of the ConceptValidMonthId property.</param>
        /// <param name="conceptId">Initial value of the ConceptId property.</param>
        /// <param name="monthId">Initial value of the MonthId property.</param>
        public static ConceptsValidMonth CreateConceptsValidMonth(global::System.Int32 conceptValidMonthId, global::System.Int32 conceptId, global::System.Int32 monthId)
        {
            ConceptsValidMonth conceptsValidMonth = new ConceptsValidMonth();
            conceptsValidMonth.ConceptValidMonthId = conceptValidMonthId;
            conceptsValidMonth.ConceptId = conceptId;
            conceptsValidMonth.MonthId = monthId;
            return conceptsValidMonth;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConceptValidMonthId
        {
            get
            {
                return _ConceptValidMonthId;
            }
            set
            {
                if (_ConceptValidMonthId != value)
                {
                    OnConceptValidMonthIdChanging(value);
                    ReportPropertyChanging("ConceptValidMonthId");
                    _ConceptValidMonthId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConceptValidMonthId");
                    OnConceptValidMonthIdChanged();
                }
            }
        }
        private global::System.Int32 _ConceptValidMonthId;
        partial void OnConceptValidMonthIdChanging(global::System.Int32 value);
        partial void OnConceptValidMonthIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConceptId
        {
            get
            {
                return _ConceptId;
            }
            set
            {
                OnConceptIdChanging(value);
                ReportPropertyChanging("ConceptId");
                _ConceptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConceptId");
                OnConceptIdChanged();
            }
        }
        private global::System.Int32 _ConceptId;
        partial void OnConceptIdChanging(global::System.Int32 value);
        partial void OnConceptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthId
        {
            get
            {
                return _MonthId;
            }
            set
            {
                OnMonthIdChanging(value);
                ReportPropertyChanging("MonthId");
                _MonthId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonthId");
                OnMonthIdChanged();
            }
        }
        private global::System.Int32 _MonthId;
        partial void OnMonthIdChanging(global::System.Int32 value);
        partial void OnMonthIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ConceptsValidMonths_Concepts", "Concept")]
        public Concept Concept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Concept>("DisneyHCMLatamPlanningDevModel.FK_ConceptsValidMonths_Concepts", "Concept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Concept>("DisneyHCMLatamPlanningDevModel.FK_ConceptsValidMonths_Concepts", "Concept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Concept> ConceptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Concept>("DisneyHCMLatamPlanningDevModel.FK_ConceptsValidMonths_Concepts", "Concept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Concept>("DisneyHCMLatamPlanningDevModel.FK_ConceptsValidMonths_Concepts", "Concept", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="CostCenter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CostCenter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CostCenter object.
        /// </summary>
        /// <param name="costCenterID">Initial value of the CostCenterID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="costCenterGroupID">Initial value of the CostCenterGroupID property.</param>
        /// <param name="departmentID">Initial value of the DepartmentID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static CostCenter CreateCostCenter(global::System.Int32 costCenterID, global::System.String description, global::System.String code, global::System.Int32 costCenterGroupID, global::System.Int32 departmentID, global::System.Int32 companyID, global::System.Boolean isActive)
        {
            CostCenter costCenter = new CostCenter();
            costCenter.CostCenterID = costCenterID;
            costCenter.Description = description;
            costCenter.Code = code;
            costCenter.CostCenterGroupID = costCenterGroupID;
            costCenter.DepartmentID = departmentID;
            costCenter.CompanyID = companyID;
            costCenter.IsActive = isActive;
            return costCenter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CostCenterID
        {
            get
            {
                return _CostCenterID;
            }
            set
            {
                if (_CostCenterID != value)
                {
                    OnCostCenterIDChanging(value);
                    ReportPropertyChanging("CostCenterID");
                    _CostCenterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CostCenterID");
                    OnCostCenterIDChanged();
                }
            }
        }
        private global::System.Int32 _CostCenterID;
        partial void OnCostCenterIDChanging(global::System.Int32 value);
        partial void OnCostCenterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CostCenterGroupID
        {
            get
            {
                return _CostCenterGroupID;
            }
            set
            {
                OnCostCenterGroupIDChanging(value);
                ReportPropertyChanging("CostCenterGroupID");
                _CostCenterGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostCenterGroupID");
                OnCostCenterGroupIDChanged();
            }
        }
        private global::System.Int32 _CostCenterGroupID;
        partial void OnCostCenterGroupIDChanging(global::System.Int32 value);
        partial void OnCostCenterGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                OnDepartmentIDChanging(value);
                ReportPropertyChanging("DepartmentID");
                _DepartmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentID");
                OnDepartmentIDChanged();
            }
        }
        private global::System.Int32 _DepartmentID;
        partial void OnDepartmentIDChanging(global::System.Int32 value);
        partial void OnDepartmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_CostCenters_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_CostCenters_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_CostCenters_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_CostCenters_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_CostCenters_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_CostCenters", "HCPositionLog")]
        public EntityCollection<HCPositionLog> HCPositionLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCPositionLog>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_CostCenters", "HCPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCPositionLog>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_CostCenters", "HCPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositions_CostCenters", "HCPosition")]
        public EntityCollection<HCPosition> HCPositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_CostCenters", "HCPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_CostCenters", "HCPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_CostCenters", "SBForecastPlanAdjustment")]
        public EntityCollection<SBForecastPlanAdjustment> SBForecastPlanAdjustments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SBForecastPlanAdjustment>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_CostCenters", "SBForecastPlanAdjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SBForecastPlanAdjustment>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_CostCenters", "SBForecastPlanAdjustment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="middleName">Initial value of the MiddleName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="departmentID">Initial value of the DepartmentID property.</param>
        /// <param name="identificationNumber">Initial value of the IdentificationNumber property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        /// <param name="eMail">Initial value of the EMail property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="statusDescription">Initial value of the StatusDescription property.</param>
        public static Employee CreateEmployee(global::System.Int32 employeeID, global::System.String firstName, global::System.String middleName, global::System.String lastName, global::System.String fullName, global::System.Int32 departmentID, global::System.String identificationNumber, global::System.DateTime effectiveDate, global::System.String eMail, global::System.Byte status, global::System.String statusDescription)
        {
            Employee employee = new Employee();
            employee.EmployeeID = employeeID;
            employee.FirstName = firstName;
            employee.MiddleName = middleName;
            employee.LastName = lastName;
            employee.FullName = fullName;
            employee.DepartmentID = departmentID;
            employee.IdentificationNumber = identificationNumber;
            employee.EffectiveDate = effectiveDate;
            employee.EMail = eMail;
            employee.Status = status;
            employee.StatusDescription = statusDescription;
            return employee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                if (_EmployeeID != value)
                {
                    OnEmployeeIDChanging(value);
                    ReportPropertyChanging("EmployeeID");
                    _EmployeeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeID");
                    OnEmployeeIDChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                OnDepartmentIDChanging(value);
                ReportPropertyChanging("DepartmentID");
                _DepartmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentID");
                OnDepartmentIDChanged();
            }
        }
        private global::System.Int32 _DepartmentID;
        partial void OnDepartmentIDChanging(global::System.Int32 value);
        partial void OnDepartmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IdentificationNumber
        {
            get
            {
                return _IdentificationNumber;
            }
            set
            {
                OnIdentificationNumberChanging(value);
                ReportPropertyChanging("IdentificationNumber");
                _IdentificationNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IdentificationNumber");
                OnIdentificationNumberChanged();
            }
        }
        private global::System.String _IdentificationNumber;
        partial void OnIdentificationNumberChanging(global::System.String value);
        partial void OnIdentificationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HCPositionID
        {
            get
            {
                return _HCPositionID;
            }
            set
            {
                OnHCPositionIDChanging(value);
                ReportPropertyChanging("HCPositionID");
                _HCPositionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCPositionID");
                OnHCPositionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _HCPositionID;
        partial void OnHCPositionIDChanging(Nullable<global::System.Int32> value);
        partial void OnHCPositionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastWorkingDate
        {
            get
            {
                return _LastWorkingDate;
            }
            set
            {
                OnLastWorkingDateChanging(value);
                ReportPropertyChanging("LastWorkingDate");
                _LastWorkingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastWorkingDate");
                OnLastWorkingDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastWorkingDate;
        partial void OnLastWorkingDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastWorkingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMail
        {
            get
            {
                return _EMail;
            }
            set
            {
                OnEMailChanging(value);
                ReportPropertyChanging("EMail");
                _EMail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EMail");
                OnEMailChanged();
            }
        }
        private global::System.String _EMail;
        partial void OnEMailChanging(global::System.String value);
        partial void OnEMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessPhone
        {
            get
            {
                return _BusinessPhone;
            }
            set
            {
                OnBusinessPhoneChanging(value);
                ReportPropertyChanging("BusinessPhone");
                _BusinessPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BusinessPhone");
                OnBusinessPhoneChanged();
            }
        }
        private global::System.String _BusinessPhone;
        partial void OnBusinessPhoneChanging(global::System.String value);
        partial void OnBusinessPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HomePhone
        {
            get
            {
                return _HomePhone;
            }
            set
            {
                OnHomePhoneChanging(value);
                ReportPropertyChanging("HomePhone");
                _HomePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HomePhone");
                OnHomePhoneChanged();
            }
        }
        private global::System.String _HomePhone;
        partial void OnHomePhoneChanging(global::System.String value);
        partial void OnHomePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePhone
        {
            get
            {
                return _MobilePhone;
            }
            set
            {
                OnMobilePhoneChanging(value);
                ReportPropertyChanging("MobilePhone");
                _MobilePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePhone");
                OnMobilePhoneChanged();
            }
        }
        private global::System.String _MobilePhone;
        partial void OnMobilePhoneChanging(global::System.String value);
        partial void OnMobilePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxNumber
        {
            get
            {
                return _TaxNumber;
            }
            set
            {
                OnTaxNumberChanging(value);
                ReportPropertyChanging("TaxNumber");
                _TaxNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxNumber");
                OnTaxNumberChanged();
            }
        }
        private global::System.String _TaxNumber;
        partial void OnTaxNumberChanging(global::System.String value);
        partial void OnTaxNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfBirth;
        partial void OnDateOfBirthChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nationality
        {
            get
            {
                return _Nationality;
            }
            set
            {
                OnNationalityChanging(value);
                ReportPropertyChanging("Nationality");
                _Nationality = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nationality");
                OnNationalityChanged();
            }
        }
        private global::System.String _Nationality;
        partial void OnNationalityChanging(global::System.String value);
        partial void OnNationalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SAPUser
        {
            get
            {
                return _SAPUser;
            }
            set
            {
                OnSAPUserChanging(value);
                ReportPropertyChanging("SAPUser");
                _SAPUser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SAPUser");
                OnSAPUserChanged();
            }
        }
        private global::System.String _SAPUser;
        partial void OnSAPUserChanging(global::System.String value);
        partial void OnSAPUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PhotoID
        {
            get
            {
                return _PhotoID;
            }
            set
            {
                OnPhotoIDChanging(value);
                ReportPropertyChanging("PhotoID");
                _PhotoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoID");
                OnPhotoIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PhotoID;
        partial void OnPhotoIDChanging(Nullable<global::System.Int32> value);
        partial void OnPhotoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Byte _Status;
        partial void OnStatusChanging(global::System.Byte value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusDescription
        {
            get
            {
                return _StatusDescription;
            }
            set
            {
                OnStatusDescriptionChanging(value);
                ReportPropertyChanging("StatusDescription");
                _StatusDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StatusDescription");
                OnStatusDescriptionChanged();
            }
        }
        private global::System.String _StatusDescription;
        partial void OnStatusDescriptionChanging(global::System.String value);
        partial void OnStatusDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DaysOfWork
        {
            get
            {
                return _DaysOfWork;
            }
            set
            {
                OnDaysOfWorkChanging(value);
                ReportPropertyChanging("DaysOfWork");
                _DaysOfWork = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DaysOfWork");
                OnDaysOfWorkChanged();
            }
        }
        private Nullable<global::System.Int32> _DaysOfWork;
        partial void OnDaysOfWorkChanging(Nullable<global::System.Int32> value);
        partial void OnDaysOfWorkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YearsOfWork
        {
            get
            {
                return _YearsOfWork;
            }
            set
            {
                OnYearsOfWorkChanging(value);
                ReportPropertyChanging("YearsOfWork");
                _YearsOfWork = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearsOfWork");
                OnYearsOfWorkChanged();
            }
        }
        private Nullable<global::System.Int32> _YearsOfWork;
        partial void OnYearsOfWorkChanging(Nullable<global::System.Int32> value);
        partial void OnYearsOfWorkChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_EmployeeLogs_Employees", "EmployeeLog")]
        public EntityCollection<EmployeeLog> EmployeeLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeLog>("DisneyHCMLatamPlanningDevModel.FK_EmployeeLogs_Employees", "EmployeeLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeLog>("DisneyHCMLatamPlanningDevModel.FK_EmployeeLogs_Employees", "EmployeeLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Employees_HCPositions", "HCPosition")]
        public HCPosition HCPosition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_Employees_HCPositions", "HCPosition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_Employees_HCPositions", "HCPosition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCPosition> HCPositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_Employees_HCPositions", "HCPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_Employees_HCPositions", "HCPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_Employees", "HCPositionLog")]
        public EntityCollection<HCPositionLog> HCPositionLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCPositionLog>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_Employees", "HCPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCPositionLog>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_Employees", "HCPositionLog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="EmployeeLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeLog object.
        /// </summary>
        /// <param name="employeeLogID">Initial value of the EmployeeLogID property.</param>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="middleName">Initial value of the MiddleName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="departmentID">Initial value of the DepartmentID property.</param>
        /// <param name="identificationNumber">Initial value of the IdentificationNumber property.</param>
        /// <param name="effectiveDate">Initial value of the EffectiveDate property.</param>
        /// <param name="eMail">Initial value of the EMail property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="statusDescription">Initial value of the StatusDescription property.</param>
        public static EmployeeLog CreateEmployeeLog(global::System.Int32 employeeLogID, global::System.Int32 employeeID, global::System.String firstName, global::System.String middleName, global::System.String lastName, global::System.String fullName, global::System.Int32 departmentID, global::System.String identificationNumber, global::System.DateTime effectiveDate, global::System.String eMail, global::System.Byte status, global::System.String statusDescription)
        {
            EmployeeLog employeeLog = new EmployeeLog();
            employeeLog.EmployeeLogID = employeeLogID;
            employeeLog.EmployeeID = employeeID;
            employeeLog.FirstName = firstName;
            employeeLog.MiddleName = middleName;
            employeeLog.LastName = lastName;
            employeeLog.FullName = fullName;
            employeeLog.DepartmentID = departmentID;
            employeeLog.IdentificationNumber = identificationNumber;
            employeeLog.EffectiveDate = effectiveDate;
            employeeLog.EMail = eMail;
            employeeLog.Status = status;
            employeeLog.StatusDescription = statusDescription;
            return employeeLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeLogID
        {
            get
            {
                return _EmployeeLogID;
            }
            set
            {
                if (_EmployeeLogID != value)
                {
                    OnEmployeeLogIDChanging(value);
                    ReportPropertyChanging("EmployeeLogID");
                    _EmployeeLogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeLogID");
                    OnEmployeeLogIDChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeLogID;
        partial void OnEmployeeLogIDChanging(global::System.Int32 value);
        partial void OnEmployeeLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentID
        {
            get
            {
                return _DepartmentID;
            }
            set
            {
                OnDepartmentIDChanging(value);
                ReportPropertyChanging("DepartmentID");
                _DepartmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentID");
                OnDepartmentIDChanged();
            }
        }
        private global::System.Int32 _DepartmentID;
        partial void OnDepartmentIDChanging(global::System.Int32 value);
        partial void OnDepartmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IdentificationNumber
        {
            get
            {
                return _IdentificationNumber;
            }
            set
            {
                OnIdentificationNumberChanging(value);
                ReportPropertyChanging("IdentificationNumber");
                _IdentificationNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IdentificationNumber");
                OnIdentificationNumberChanged();
            }
        }
        private global::System.String _IdentificationNumber;
        partial void OnIdentificationNumberChanging(global::System.String value);
        partial void OnIdentificationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HCPositionID
        {
            get
            {
                return _HCPositionID;
            }
            set
            {
                OnHCPositionIDChanging(value);
                ReportPropertyChanging("HCPositionID");
                _HCPositionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCPositionID");
                OnHCPositionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _HCPositionID;
        partial void OnHCPositionIDChanging(Nullable<global::System.Int32> value);
        partial void OnHCPositionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffectiveDate
        {
            get
            {
                return _EffectiveDate;
            }
            set
            {
                OnEffectiveDateChanging(value);
                ReportPropertyChanging("EffectiveDate");
                _EffectiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectiveDate");
                OnEffectiveDateChanged();
            }
        }
        private global::System.DateTime _EffectiveDate;
        partial void OnEffectiveDateChanging(global::System.DateTime value);
        partial void OnEffectiveDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastWorkingDate
        {
            get
            {
                return _LastWorkingDate;
            }
            set
            {
                OnLastWorkingDateChanging(value);
                ReportPropertyChanging("LastWorkingDate");
                _LastWorkingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastWorkingDate");
                OnLastWorkingDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastWorkingDate;
        partial void OnLastWorkingDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastWorkingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EMail
        {
            get
            {
                return _EMail;
            }
            set
            {
                OnEMailChanging(value);
                ReportPropertyChanging("EMail");
                _EMail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EMail");
                OnEMailChanged();
            }
        }
        private global::System.String _EMail;
        partial void OnEMailChanging(global::System.String value);
        partial void OnEMailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BusinessPhone
        {
            get
            {
                return _BusinessPhone;
            }
            set
            {
                OnBusinessPhoneChanging(value);
                ReportPropertyChanging("BusinessPhone");
                _BusinessPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BusinessPhone");
                OnBusinessPhoneChanged();
            }
        }
        private global::System.String _BusinessPhone;
        partial void OnBusinessPhoneChanging(global::System.String value);
        partial void OnBusinessPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HomePhone
        {
            get
            {
                return _HomePhone;
            }
            set
            {
                OnHomePhoneChanging(value);
                ReportPropertyChanging("HomePhone");
                _HomePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HomePhone");
                OnHomePhoneChanged();
            }
        }
        private global::System.String _HomePhone;
        partial void OnHomePhoneChanging(global::System.String value);
        partial void OnHomePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePhone
        {
            get
            {
                return _MobilePhone;
            }
            set
            {
                OnMobilePhoneChanging(value);
                ReportPropertyChanging("MobilePhone");
                _MobilePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePhone");
                OnMobilePhoneChanged();
            }
        }
        private global::System.String _MobilePhone;
        partial void OnMobilePhoneChanging(global::System.String value);
        partial void OnMobilePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxNumber
        {
            get
            {
                return _TaxNumber;
            }
            set
            {
                OnTaxNumberChanging(value);
                ReportPropertyChanging("TaxNumber");
                _TaxNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxNumber");
                OnTaxNumberChanged();
            }
        }
        private global::System.String _TaxNumber;
        partial void OnTaxNumberChanging(global::System.String value);
        partial void OnTaxNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfBirth;
        partial void OnDateOfBirthChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nationality
        {
            get
            {
                return _Nationality;
            }
            set
            {
                OnNationalityChanging(value);
                ReportPropertyChanging("Nationality");
                _Nationality = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nationality");
                OnNationalityChanged();
            }
        }
        private global::System.String _Nationality;
        partial void OnNationalityChanging(global::System.String value);
        partial void OnNationalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SAPUser
        {
            get
            {
                return _SAPUser;
            }
            set
            {
                OnSAPUserChanging(value);
                ReportPropertyChanging("SAPUser");
                _SAPUser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SAPUser");
                OnSAPUserChanged();
            }
        }
        private global::System.String _SAPUser;
        partial void OnSAPUserChanging(global::System.String value);
        partial void OnSAPUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PhotoID
        {
            get
            {
                return _PhotoID;
            }
            set
            {
                OnPhotoIDChanging(value);
                ReportPropertyChanging("PhotoID");
                _PhotoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhotoID");
                OnPhotoIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PhotoID;
        partial void OnPhotoIDChanging(Nullable<global::System.Int32> value);
        partial void OnPhotoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Byte _Status;
        partial void OnStatusChanging(global::System.Byte value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusDescription
        {
            get
            {
                return _StatusDescription;
            }
            set
            {
                OnStatusDescriptionChanging(value);
                ReportPropertyChanging("StatusDescription");
                _StatusDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StatusDescription");
                OnStatusDescriptionChanged();
            }
        }
        private global::System.String _StatusDescription;
        partial void OnStatusDescriptionChanging(global::System.String value);
        partial void OnStatusDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DaysOfWork
        {
            get
            {
                return _DaysOfWork;
            }
            set
            {
                OnDaysOfWorkChanging(value);
                ReportPropertyChanging("DaysOfWork");
                _DaysOfWork = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DaysOfWork");
                OnDaysOfWorkChanged();
            }
        }
        private Nullable<global::System.Int32> _DaysOfWork;
        partial void OnDaysOfWorkChanging(Nullable<global::System.Int32> value);
        partial void OnDaysOfWorkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YearsOfWork
        {
            get
            {
                return _YearsOfWork;
            }
            set
            {
                OnYearsOfWorkChanging(value);
                ReportPropertyChanging("YearsOfWork");
                _YearsOfWork = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearsOfWork");
                OnYearsOfWorkChanged();
            }
        }
        private Nullable<global::System.Int32> _YearsOfWork;
        partial void OnYearsOfWorkChanging(Nullable<global::System.Int32> value);
        partial void OnYearsOfWorkChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_EmployeeLogs_Employees", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DisneyHCMLatamPlanningDevModel.FK_EmployeeLogs_Employees", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DisneyHCMLatamPlanningDevModel.FK_EmployeeLogs_Employees", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DisneyHCMLatamPlanningDevModel.FK_EmployeeLogs_Employees", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("DisneyHCMLatamPlanningDevModel.FK_EmployeeLogs_Employees", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanPositions_EmployeeLogs", "SBForecastPlanPosition")]
        public EntityCollection<SBForecastPlanPosition> SBForecastPlanPositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SBForecastPlanPosition>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanPositions_EmployeeLogs", "SBForecastPlanPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SBForecastPlanPosition>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanPositions_EmployeeLogs", "SBForecastPlanPosition", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="ExpenseGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExpenseGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExpenseGroup object.
        /// </summary>
        /// <param name="expenseGroupId">Initial value of the ExpenseGroupId property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static ExpenseGroup CreateExpenseGroup(global::System.Int32 expenseGroupId, global::System.String code, global::System.String description, global::System.Boolean isActive)
        {
            ExpenseGroup expenseGroup = new ExpenseGroup();
            expenseGroup.ExpenseGroupId = expenseGroupId;
            expenseGroup.Code = code;
            expenseGroup.Description = description;
            expenseGroup.IsActive = isActive;
            return expenseGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpenseGroupId
        {
            get
            {
                return _ExpenseGroupId;
            }
            set
            {
                if (_ExpenseGroupId != value)
                {
                    OnExpenseGroupIdChanging(value);
                    ReportPropertyChanging("ExpenseGroupId");
                    _ExpenseGroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExpenseGroupId");
                    OnExpenseGroupIdChanged();
                }
            }
        }
        private global::System.Int32 _ExpenseGroupId;
        partial void OnExpenseGroupIdChanging(global::System.Int32 value);
        partial void OnExpenseGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ExpenseTypes_ExpenseGroups", "ExpenseType")]
        public EntityCollection<ExpenseType> ExpenseTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpenseType>("DisneyHCMLatamPlanningDevModel.FK_ExpenseTypes_ExpenseGroups", "ExpenseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpenseType>("DisneyHCMLatamPlanningDevModel.FK_ExpenseTypes_ExpenseGroups", "ExpenseType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="ExpenseType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExpenseType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExpenseType object.
        /// </summary>
        /// <param name="expenseTypeId">Initial value of the ExpenseTypeId property.</param>
        /// <param name="expenseGroupId">Initial value of the ExpenseGroupId property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static ExpenseType CreateExpenseType(global::System.Int32 expenseTypeId, global::System.Int32 expenseGroupId, global::System.String code, global::System.String description, global::System.Boolean isActive)
        {
            ExpenseType expenseType = new ExpenseType();
            expenseType.ExpenseTypeId = expenseTypeId;
            expenseType.ExpenseGroupId = expenseGroupId;
            expenseType.Code = code;
            expenseType.Description = description;
            expenseType.IsActive = isActive;
            return expenseType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpenseTypeId
        {
            get
            {
                return _ExpenseTypeId;
            }
            set
            {
                if (_ExpenseTypeId != value)
                {
                    OnExpenseTypeIdChanging(value);
                    ReportPropertyChanging("ExpenseTypeId");
                    _ExpenseTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExpenseTypeId");
                    OnExpenseTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ExpenseTypeId;
        partial void OnExpenseTypeIdChanging(global::System.Int32 value);
        partial void OnExpenseTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpenseGroupId
        {
            get
            {
                return _ExpenseGroupId;
            }
            set
            {
                OnExpenseGroupIdChanging(value);
                ReportPropertyChanging("ExpenseGroupId");
                _ExpenseGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpenseGroupId");
                OnExpenseGroupIdChanged();
            }
        }
        private global::System.Int32 _ExpenseGroupId;
        partial void OnExpenseGroupIdChanging(global::System.Int32 value);
        partial void OnExpenseGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_ExpenseTypes", "Concept")]
        public EntityCollection<Concept> Concepts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Concept>("DisneyHCMLatamPlanningDevModel.FK_Concepts_ExpenseTypes", "Concept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Concept>("DisneyHCMLatamPlanningDevModel.FK_Concepts_ExpenseTypes", "Concept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ExpenseTypes_ExpenseGroups", "ExpenseGroup")]
        public ExpenseGroup ExpenseGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseGroup>("DisneyHCMLatamPlanningDevModel.FK_ExpenseTypes_ExpenseGroups", "ExpenseGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseGroup>("DisneyHCMLatamPlanningDevModel.FK_ExpenseTypes_ExpenseGroups", "ExpenseGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseGroup> ExpenseGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseGroup>("DisneyHCMLatamPlanningDevModel.FK_ExpenseTypes_ExpenseGroups", "ExpenseGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseGroup>("DisneyHCMLatamPlanningDevModel.FK_ExpenseTypes_ExpenseGroups", "ExpenseGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_ExpenseTypes", "SBForecastPlanAdjustment")]
        public EntityCollection<SBForecastPlanAdjustment> SBForecastPlanAdjustments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SBForecastPlanAdjustment>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_ExpenseTypes", "SBForecastPlanAdjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SBForecastPlanAdjustment>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_ExpenseTypes", "SBForecastPlanAdjustment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="Filter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Filter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Filter object.
        /// </summary>
        /// <param name="filterId">Initial value of the FilterId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="filterTypeId">Initial value of the FilterTypeId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="operation">Initial value of the Operation property.</param>
        public static Filter CreateFilter(global::System.Int32 filterId, global::System.String title, global::System.Int32 filterTypeId, global::System.String description, global::System.String operation)
        {
            Filter filter = new Filter();
            filter.FilterId = filterId;
            filter.Title = title;
            filter.FilterTypeId = filterTypeId;
            filter.Description = description;
            filter.Operation = operation;
            return filter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FilterId
        {
            get
            {
                return _FilterId;
            }
            set
            {
                if (_FilterId != value)
                {
                    OnFilterIdChanging(value);
                    ReportPropertyChanging("FilterId");
                    _FilterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FilterId");
                    OnFilterIdChanged();
                }
            }
        }
        private global::System.Int32 _FilterId;
        partial void OnFilterIdChanging(global::System.Int32 value);
        partial void OnFilterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FilterTypeId
        {
            get
            {
                return _FilterTypeId;
            }
            set
            {
                OnFilterTypeIdChanging(value);
                ReportPropertyChanging("FilterTypeId");
                _FilterTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FilterTypeId");
                OnFilterTypeIdChanged();
            }
        }
        private global::System.Int32 _FilterTypeId;
        partial void OnFilterTypeIdChanging(global::System.Int32 value);
        partial void OnFilterTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Parameter1Id
        {
            get
            {
                return _Parameter1Id;
            }
            set
            {
                OnParameter1IdChanging(value);
                ReportPropertyChanging("Parameter1Id");
                _Parameter1Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Parameter1Id");
                OnParameter1IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Parameter1Id;
        partial void OnParameter1IdChanging(Nullable<global::System.Int32> value);
        partial void OnParameter1IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Parameter2Id
        {
            get
            {
                return _Parameter2Id;
            }
            set
            {
                OnParameter2IdChanging(value);
                ReportPropertyChanging("Parameter2Id");
                _Parameter2Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Parameter2Id");
                OnParameter2IdChanged();
            }
        }
        private Nullable<global::System.Int32> _Parameter2Id;
        partial void OnParameter2IdChanging(Nullable<global::System.Int32> value);
        partial void OnParameter2IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Operation
        {
            get
            {
                return _Operation;
            }
            set
            {
                OnOperationChanging(value);
                ReportPropertyChanging("Operation");
                _Operation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Operation");
                OnOperationChanged();
            }
        }
        private global::System.String _Operation;
        partial void OnOperationChanging(global::System.String value);
        partial void OnOperationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ConceptFilters_filters", "ConceptFilter")]
        public EntityCollection<ConceptFilter> ConceptFilters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConceptFilter>("DisneyHCMLatamPlanningDevModel.FK_ConceptFilters_filters", "ConceptFilter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConceptFilter>("DisneyHCMLatamPlanningDevModel.FK_ConceptFilters_filters", "ConceptFilter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Filters_FilterTypes", "FilterType")]
        public FilterType FilterType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilterType>("DisneyHCMLatamPlanningDevModel.FK_Filters_FilterTypes", "FilterType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilterType>("DisneyHCMLatamPlanningDevModel.FK_Filters_FilterTypes", "FilterType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FilterType> FilterTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FilterType>("DisneyHCMLatamPlanningDevModel.FK_Filters_FilterTypes", "FilterType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FilterType>("DisneyHCMLatamPlanningDevModel.FK_Filters_FilterTypes", "FilterType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Filters_Parameters", "Parameter")]
        public Parameter Parameter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Filters_Parameters", "Parameter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Filters_Parameters", "Parameter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parameter> ParameterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Filters_Parameters", "Parameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Filters_Parameters", "Parameter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Filters_Parameters1", "Parameter")]
        public Parameter Parameter1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Filters_Parameters1", "Parameter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Filters_Parameters1", "Parameter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parameter> Parameter1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Filters_Parameters1", "Parameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Filters_Parameters1", "Parameter", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="FilterType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FilterType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FilterType object.
        /// </summary>
        /// <param name="filterTypeId">Initial value of the FilterTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static FilterType CreateFilterType(global::System.Int32 filterTypeId, global::System.String name)
        {
            FilterType filterType = new FilterType();
            filterType.FilterTypeId = filterTypeId;
            filterType.Name = name;
            return filterType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FilterTypeId
        {
            get
            {
                return _FilterTypeId;
            }
            set
            {
                if (_FilterTypeId != value)
                {
                    OnFilterTypeIdChanging(value);
                    ReportPropertyChanging("FilterTypeId");
                    _FilterTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FilterTypeId");
                    OnFilterTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _FilterTypeId;
        partial void OnFilterTypeIdChanging(global::System.Int32 value);
        partial void OnFilterTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Filters_FilterTypes", "Filter")]
        public EntityCollection<Filter> Filters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Filter>("DisneyHCMLatamPlanningDevModel.FK_Filters_FilterTypes", "Filter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Filter>("DisneyHCMLatamPlanningDevModel.FK_Filters_FilterTypes", "Filter", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="FiscalYear")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FiscalYear : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FiscalYear object.
        /// </summary>
        /// <param name="fiscalYearID">Initial value of the FiscalYearID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="beginDate">Initial value of the BeginDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="isCurrent">Initial value of the IsCurrent property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static FiscalYear CreateFiscalYear(global::System.Int32 fiscalYearID, global::System.String code, global::System.DateTime beginDate, global::System.DateTime endDate, global::System.Boolean isCurrent, global::System.Boolean isActive)
        {
            FiscalYear fiscalYear = new FiscalYear();
            fiscalYear.FiscalYearID = fiscalYearID;
            fiscalYear.Code = code;
            fiscalYear.BeginDate = beginDate;
            fiscalYear.EndDate = endDate;
            fiscalYear.IsCurrent = isCurrent;
            fiscalYear.IsActive = isActive;
            return fiscalYear;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FiscalYearID
        {
            get
            {
                return _FiscalYearID;
            }
            set
            {
                if (_FiscalYearID != value)
                {
                    OnFiscalYearIDChanging(value);
                    ReportPropertyChanging("FiscalYearID");
                    _FiscalYearID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FiscalYearID");
                    OnFiscalYearIDChanged();
                }
            }
        }
        private global::System.Int32 _FiscalYearID;
        partial void OnFiscalYearIDChanging(global::System.Int32 value);
        partial void OnFiscalYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BeginDate
        {
            get
            {
                return _BeginDate;
            }
            set
            {
                OnBeginDateChanging(value);
                ReportPropertyChanging("BeginDate");
                _BeginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BeginDate");
                OnBeginDateChanged();
            }
        }
        private global::System.DateTime _BeginDate;
        partial void OnBeginDateChanging(global::System.DateTime value);
        partial void OnBeginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCurrent
        {
            get
            {
                return _IsCurrent;
            }
            set
            {
                OnIsCurrentChanging(value);
                ReportPropertyChanging("IsCurrent");
                _IsCurrent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCurrent");
                OnIsCurrentChanged();
            }
        }
        private global::System.Boolean _IsCurrent;
        partial void OnIsCurrentChanging(global::System.Boolean value);
        partial void OnIsCurrentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlans_FiscalYears", "SBForecastPlan")]
        public EntityCollection<SBForecastPlan> SBForecastPlans
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SBForecastPlan>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlans_FiscalYears", "SBForecastPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SBForecastPlan>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlans_FiscalYears", "SBForecastPlan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ParameterValues_FiscalYears", "ParameterValue")]
        public EntityCollection<ParameterValue> ParameterValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ParameterValue>("DisneyHCMLatamPlanningDevModel.FK_ParameterValues_FiscalYears", "ParameterValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ParameterValue>("DisneyHCMLatamPlanningDevModel.FK_ParameterValues_FiscalYears", "ParameterValue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="GLAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GLAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GLAccount object.
        /// </summary>
        /// <param name="gLAccountId">Initial value of the GLAccountId property.</param>
        /// <param name="sAPCode">Initial value of the SAPCode property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static GLAccount CreateGLAccount(global::System.Int32 gLAccountId, global::System.String sAPCode, global::System.String title, global::System.Boolean isActive)
        {
            GLAccount gLAccount = new GLAccount();
            gLAccount.GLAccountId = gLAccountId;
            gLAccount.SAPCode = sAPCode;
            gLAccount.Title = title;
            gLAccount.IsActive = isActive;
            return gLAccount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GLAccountId
        {
            get
            {
                return _GLAccountId;
            }
            set
            {
                if (_GLAccountId != value)
                {
                    OnGLAccountIdChanging(value);
                    ReportPropertyChanging("GLAccountId");
                    _GLAccountId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GLAccountId");
                    OnGLAccountIdChanged();
                }
            }
        }
        private global::System.Int32 _GLAccountId;
        partial void OnGLAccountIdChanging(global::System.Int32 value);
        partial void OnGLAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SAPCode
        {
            get
            {
                return _SAPCode;
            }
            set
            {
                OnSAPCodeChanging(value);
                ReportPropertyChanging("SAPCode");
                _SAPCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SAPCode");
                OnSAPCodeChanged();
            }
        }
        private global::System.String _SAPCode;
        partial void OnSAPCodeChanging(global::System.String value);
        partial void OnSAPCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_GLAccounts", "Concept")]
        public EntityCollection<Concept> Concepts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Concept>("DisneyHCMLatamPlanningDevModel.FK_Concepts_GLAccounts", "Concept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Concept>("DisneyHCMLatamPlanningDevModel.FK_Concepts_GLAccounts", "Concept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_GLAccounts", "SBForecastPlanAdjustment")]
        public EntityCollection<SBForecastPlanAdjustment> SBForecastPlanAdjustments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SBForecastPlanAdjustment>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_GLAccounts", "SBForecastPlanAdjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SBForecastPlanAdjustment>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_GLAccounts", "SBForecastPlanAdjustment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="HCPosition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HCPosition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HCPosition object.
        /// </summary>
        /// <param name="hCPositionID">Initial value of the HCPositionID property.</param>
        /// <param name="originType">Initial value of the OriginType property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="lobID">Initial value of the LobID property.</param>
        /// <param name="territoryID">Initial value of the TerritoryID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="laborGradeID">Initial value of the LaborGradeID property.</param>
        /// <param name="fiscalTimeStartDateID">Initial value of the FiscalTimeStartDateID property.</param>
        /// <param name="hCTypeID">Initial value of the HCTypeID property.</param>
        /// <param name="costCenterPrimaryID">Initial value of the CostCenterPrimaryID property.</param>
        /// <param name="hCStatusID">Initial value of the HCStatusID property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="isConversion">Initial value of the IsConversion property.</param>
        /// <param name="isNew">Initial value of the IsNew property.</param>
        public static HCPosition CreateHCPosition(global::System.Int32 hCPositionID, global::System.Byte originType, global::System.String description, global::System.Int32 lobID, global::System.Int32 territoryID, global::System.Int32 companyID, global::System.Int32 laborGradeID, global::System.Int32 fiscalTimeStartDateID, global::System.Int32 hCTypeID, global::System.Int32 costCenterPrimaryID, global::System.Int32 hCStatusID, global::System.DateTime modifiedDate, global::System.Boolean isConversion, global::System.Boolean isNew)
        {
            HCPosition hCPosition = new HCPosition();
            hCPosition.HCPositionID = hCPositionID;
            hCPosition.OriginType = originType;
            hCPosition.Description = description;
            hCPosition.LobID = lobID;
            hCPosition.TerritoryID = territoryID;
            hCPosition.CompanyID = companyID;
            hCPosition.LaborGradeID = laborGradeID;
            hCPosition.FiscalTimeStartDateID = fiscalTimeStartDateID;
            hCPosition.HCTypeID = hCTypeID;
            hCPosition.CostCenterPrimaryID = costCenterPrimaryID;
            hCPosition.HCStatusID = hCStatusID;
            hCPosition.ModifiedDate = modifiedDate;
            hCPosition.IsConversion = isConversion;
            hCPosition.IsNew = isNew;
            return hCPosition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HCPositionID
        {
            get
            {
                return _HCPositionID;
            }
            set
            {
                if (_HCPositionID != value)
                {
                    OnHCPositionIDChanging(value);
                    ReportPropertyChanging("HCPositionID");
                    _HCPositionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HCPositionID");
                    OnHCPositionIDChanged();
                }
            }
        }
        private global::System.Int32 _HCPositionID;
        partial void OnHCPositionIDChanging(global::System.Int32 value);
        partial void OnHCPositionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte OriginType
        {
            get
            {
                return _OriginType;
            }
            set
            {
                OnOriginTypeChanging(value);
                ReportPropertyChanging("OriginType");
                _OriginType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginType");
                OnOriginTypeChanged();
            }
        }
        private global::System.Byte _OriginType;
        partial void OnOriginTypeChanging(global::System.Byte value);
        partial void OnOriginTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlanScheduleID
        {
            get
            {
                return _PlanScheduleID;
            }
            set
            {
                OnPlanScheduleIDChanging(value);
                ReportPropertyChanging("PlanScheduleID");
                _PlanScheduleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlanScheduleID");
                OnPlanScheduleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PlanScheduleID;
        partial void OnPlanScheduleIDChanging(Nullable<global::System.Int32> value);
        partial void OnPlanScheduleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LobID
        {
            get
            {
                return _LobID;
            }
            set
            {
                OnLobIDChanging(value);
                ReportPropertyChanging("LobID");
                _LobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LobID");
                OnLobIDChanged();
            }
        }
        private global::System.Int32 _LobID;
        partial void OnLobIDChanging(global::System.Int32 value);
        partial void OnLobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TerritoryID
        {
            get
            {
                return _TerritoryID;
            }
            set
            {
                OnTerritoryIDChanging(value);
                ReportPropertyChanging("TerritoryID");
                _TerritoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TerritoryID");
                OnTerritoryIDChanged();
            }
        }
        private global::System.Int32 _TerritoryID;
        partial void OnTerritoryIDChanging(global::System.Int32 value);
        partial void OnTerritoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HCParentID
        {
            get
            {
                return _HCParentID;
            }
            set
            {
                OnHCParentIDChanging(value);
                ReportPropertyChanging("HCParentID");
                _HCParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCParentID");
                OnHCParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _HCParentID;
        partial void OnHCParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnHCParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IHCPositionID
        {
            get
            {
                return _IHCPositionID;
            }
            set
            {
                OnIHCPositionIDChanging(value);
                ReportPropertyChanging("IHCPositionID");
                _IHCPositionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IHCPositionID");
                OnIHCPositionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _IHCPositionID;
        partial void OnIHCPositionIDChanging(Nullable<global::System.Int32> value);
        partial void OnIHCPositionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LaborGradeID
        {
            get
            {
                return _LaborGradeID;
            }
            set
            {
                OnLaborGradeIDChanging(value);
                ReportPropertyChanging("LaborGradeID");
                _LaborGradeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LaborGradeID");
                OnLaborGradeIDChanged();
            }
        }
        private global::System.Int32 _LaborGradeID;
        partial void OnLaborGradeIDChanging(global::System.Int32 value);
        partial void OnLaborGradeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FiscalTimeStartDateID
        {
            get
            {
                return _FiscalTimeStartDateID;
            }
            set
            {
                OnFiscalTimeStartDateIDChanging(value);
                ReportPropertyChanging("FiscalTimeStartDateID");
                _FiscalTimeStartDateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FiscalTimeStartDateID");
                OnFiscalTimeStartDateIDChanged();
            }
        }
        private global::System.Int32 _FiscalTimeStartDateID;
        partial void OnFiscalTimeStartDateIDChanging(global::System.Int32 value);
        partial void OnFiscalTimeStartDateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FiscalTimeEndDateID
        {
            get
            {
                return _FiscalTimeEndDateID;
            }
            set
            {
                OnFiscalTimeEndDateIDChanging(value);
                ReportPropertyChanging("FiscalTimeEndDateID");
                _FiscalTimeEndDateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FiscalTimeEndDateID");
                OnFiscalTimeEndDateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FiscalTimeEndDateID;
        partial void OnFiscalTimeEndDateIDChanging(Nullable<global::System.Int32> value);
        partial void OnFiscalTimeEndDateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HCTypeID
        {
            get
            {
                return _HCTypeID;
            }
            set
            {
                OnHCTypeIDChanging(value);
                ReportPropertyChanging("HCTypeID");
                _HCTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCTypeID");
                OnHCTypeIDChanged();
            }
        }
        private global::System.Int32 _HCTypeID;
        partial void OnHCTypeIDChanging(global::System.Int32 value);
        partial void OnHCTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CostCenterPrimaryID
        {
            get
            {
                return _CostCenterPrimaryID;
            }
            set
            {
                OnCostCenterPrimaryIDChanging(value);
                ReportPropertyChanging("CostCenterPrimaryID");
                _CostCenterPrimaryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostCenterPrimaryID");
                OnCostCenterPrimaryIDChanged();
            }
        }
        private global::System.Int32 _CostCenterPrimaryID;
        partial void OnCostCenterPrimaryIDChanging(global::System.Int32 value);
        partial void OnCostCenterPrimaryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HCStatusID
        {
            get
            {
                return _HCStatusID;
            }
            set
            {
                OnHCStatusIDChanging(value);
                ReportPropertyChanging("HCStatusID");
                _HCStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCStatusID");
                OnHCStatusIDChanged();
            }
        }
        private global::System.Int32 _HCStatusID;
        partial void OnHCStatusIDChanging(global::System.Int32 value);
        partial void OnHCStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsConversion
        {
            get
            {
                return _IsConversion;
            }
            set
            {
                OnIsConversionChanging(value);
                ReportPropertyChanging("IsConversion");
                _IsConversion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsConversion");
                OnIsConversionChanged();
            }
        }
        private global::System.Boolean _IsConversion;
        partial void OnIsConversionChanging(global::System.Boolean value);
        partial void OnIsConversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsNew
        {
            get
            {
                return _IsNew;
            }
            set
            {
                OnIsNewChanging(value);
                ReportPropertyChanging("IsNew");
                _IsNew = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNew");
                OnIsNewChanged();
            }
        }
        private global::System.Boolean _IsNew;
        partial void OnIsNewChanging(global::System.Boolean value);
        partial void OnIsNewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SAPPositionNumber
        {
            get
            {
                return _SAPPositionNumber;
            }
            set
            {
                OnSAPPositionNumberChanging(value);
                ReportPropertyChanging("SAPPositionNumber");
                _SAPPositionNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SAPPositionNumber");
                OnSAPPositionNumberChanged();
            }
        }
        private global::System.String _SAPPositionNumber;
        partial void OnSAPPositionNumberChanging(global::System.String value);
        partial void OnSAPPositionNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AnnualSalary
        {
            get
            {
                return _AnnualSalary;
            }
            set
            {
                OnAnnualSalaryChanging(value);
                ReportPropertyChanging("AnnualSalary");
                _AnnualSalary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnnualSalary");
                OnAnnualSalaryChanged();
            }
        }
        private Nullable<global::System.Decimal> _AnnualSalary;
        partial void OnAnnualSalaryChanging(Nullable<global::System.Decimal> value);
        partial void OnAnnualSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BonusPlanId
        {
            get
            {
                return _BonusPlanId;
            }
            set
            {
                OnBonusPlanIdChanging(value);
                ReportPropertyChanging("BonusPlanId");
                _BonusPlanId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BonusPlanId");
                OnBonusPlanIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BonusPlanId;
        partial void OnBonusPlanIdChanging(Nullable<global::System.Int32> value);
        partial void OnBonusPlanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PersonalSubAreaId
        {
            get
            {
                return _PersonalSubAreaId;
            }
            set
            {
                OnPersonalSubAreaIdChanging(value);
                ReportPropertyChanging("PersonalSubAreaId");
                _PersonalSubAreaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonalSubAreaId");
                OnPersonalSubAreaIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PersonalSubAreaId;
        partial void OnPersonalSubAreaIdChanging(Nullable<global::System.Int32> value);
        partial void OnPersonalSubAreaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CommisionsElegible
        {
            get
            {
                return _CommisionsElegible;
            }
            set
            {
                OnCommisionsElegibleChanging(value);
                ReportPropertyChanging("CommisionsElegible");
                _CommisionsElegible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommisionsElegible");
                OnCommisionsElegibleChanged();
            }
        }
        private Nullable<global::System.Boolean> _CommisionsElegible;
        partial void OnCommisionsElegibleChanging(Nullable<global::System.Boolean> value);
        partial void OnCommisionsElegibleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositions_HCPositions", "HCPosition1")]
        public EntityCollection<HCPosition> HCPositions1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_HCPositions", "HCPosition1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_HCPositions", "HCPosition1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositions_HCPositions", "HCPosition")]
        public HCPosition HCPosition1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_HCPositions", "HCPosition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_HCPositions", "HCPosition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCPosition> HCPosition1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_HCPositions", "HCPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_HCPositions", "HCPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositions_HCTypes", "HCType")]
        public HCType HCType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCType>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_HCTypes", "HCType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCType>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_HCTypes", "HCType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCType> HCTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCType>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_HCTypes", "HCType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCType>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_HCTypes", "HCType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositions_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_HCPositions", "HCPositionLog")]
        public EntityCollection<HCPositionLog> HCPositionLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCPositionLog>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_HCPositions", "HCPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCPositionLog>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_HCPositions", "HCPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_HCPositions1", "HCPositionLog")]
        public EntityCollection<HCPositionLog> HCPositionLogs1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCPositionLog>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_HCPositions1", "HCPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCPositionLog>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_HCPositions1", "HCPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositions_CostCenters", "CostCenter")]
        public CostCenter CostCenter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostCenter>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_CostCenters", "CostCenter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostCenter>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_CostCenters", "CostCenter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CostCenter> CostCenterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostCenter>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_CostCenters", "CostCenter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CostCenter>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_CostCenters", "CostCenter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Employees_HCPositions", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("DisneyHCMLatamPlanningDevModel.FK_Employees_HCPositions", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("DisneyHCMLatamPlanningDevModel.FK_Employees_HCPositions", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositions_Lobs", "Lob")]
        public Lob Lob
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lob>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_Lobs", "Lob").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lob>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_Lobs", "Lob").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lob> LobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lob>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_Lobs", "Lob");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lob>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_Lobs", "Lob", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="HCPositionLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HCPositionLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HCPositionLog object.
        /// </summary>
        /// <param name="hCPositionLogID">Initial value of the HCPositionLogID property.</param>
        /// <param name="hCPositionID">Initial value of the HCPositionID property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="originType">Initial value of the OriginType property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="lobID">Initial value of the LobID property.</param>
        /// <param name="territoryID">Initial value of the TerritoryID property.</param>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="laborGradeID">Initial value of the LaborGradeID property.</param>
        /// <param name="fiscalTimeStartDateID">Initial value of the FiscalTimeStartDateID property.</param>
        /// <param name="hCTypeID">Initial value of the HCTypeID property.</param>
        /// <param name="costCenterPrimaryID">Initial value of the CostCenterPrimaryID property.</param>
        /// <param name="hCStatusID">Initial value of the HCStatusID property.</param>
        /// <param name="isConversion">Initial value of the IsConversion property.</param>
        /// <param name="isNew">Initial value of the IsNew property.</param>
        public static HCPositionLog CreateHCPositionLog(global::System.Int32 hCPositionLogID, global::System.Int32 hCPositionID, global::System.DateTime modifiedDate, global::System.Byte originType, global::System.String description, global::System.Int32 lobID, global::System.Int32 territoryID, global::System.Int32 companyID, global::System.Int32 laborGradeID, global::System.Int32 fiscalTimeStartDateID, global::System.Int32 hCTypeID, global::System.Int32 costCenterPrimaryID, global::System.Int32 hCStatusID, global::System.Boolean isConversion, global::System.Boolean isNew)
        {
            HCPositionLog hCPositionLog = new HCPositionLog();
            hCPositionLog.HCPositionLogID = hCPositionLogID;
            hCPositionLog.HCPositionID = hCPositionID;
            hCPositionLog.ModifiedDate = modifiedDate;
            hCPositionLog.OriginType = originType;
            hCPositionLog.Description = description;
            hCPositionLog.LobID = lobID;
            hCPositionLog.TerritoryID = territoryID;
            hCPositionLog.CompanyID = companyID;
            hCPositionLog.LaborGradeID = laborGradeID;
            hCPositionLog.FiscalTimeStartDateID = fiscalTimeStartDateID;
            hCPositionLog.HCTypeID = hCTypeID;
            hCPositionLog.CostCenterPrimaryID = costCenterPrimaryID;
            hCPositionLog.HCStatusID = hCStatusID;
            hCPositionLog.IsConversion = isConversion;
            hCPositionLog.IsNew = isNew;
            return hCPositionLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HCPositionLogID
        {
            get
            {
                return _HCPositionLogID;
            }
            set
            {
                if (_HCPositionLogID != value)
                {
                    OnHCPositionLogIDChanging(value);
                    ReportPropertyChanging("HCPositionLogID");
                    _HCPositionLogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HCPositionLogID");
                    OnHCPositionLogIDChanged();
                }
            }
        }
        private global::System.Int32 _HCPositionLogID;
        partial void OnHCPositionLogIDChanging(global::System.Int32 value);
        partial void OnHCPositionLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HCPositionID
        {
            get
            {
                return _HCPositionID;
            }
            set
            {
                OnHCPositionIDChanging(value);
                ReportPropertyChanging("HCPositionID");
                _HCPositionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCPositionID");
                OnHCPositionIDChanged();
            }
        }
        private global::System.Int32 _HCPositionID;
        partial void OnHCPositionIDChanging(global::System.Int32 value);
        partial void OnHCPositionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte OriginType
        {
            get
            {
                return _OriginType;
            }
            set
            {
                OnOriginTypeChanging(value);
                ReportPropertyChanging("OriginType");
                _OriginType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginType");
                OnOriginTypeChanged();
            }
        }
        private global::System.Byte _OriginType;
        partial void OnOriginTypeChanging(global::System.Byte value);
        partial void OnOriginTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlanScheduleID
        {
            get
            {
                return _PlanScheduleID;
            }
            set
            {
                OnPlanScheduleIDChanging(value);
                ReportPropertyChanging("PlanScheduleID");
                _PlanScheduleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlanScheduleID");
                OnPlanScheduleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PlanScheduleID;
        partial void OnPlanScheduleIDChanging(Nullable<global::System.Int32> value);
        partial void OnPlanScheduleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LobID
        {
            get
            {
                return _LobID;
            }
            set
            {
                OnLobIDChanging(value);
                ReportPropertyChanging("LobID");
                _LobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LobID");
                OnLobIDChanged();
            }
        }
        private global::System.Int32 _LobID;
        partial void OnLobIDChanging(global::System.Int32 value);
        partial void OnLobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TerritoryID
        {
            get
            {
                return _TerritoryID;
            }
            set
            {
                OnTerritoryIDChanging(value);
                ReportPropertyChanging("TerritoryID");
                _TerritoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TerritoryID");
                OnTerritoryIDChanged();
            }
        }
        private global::System.Int32 _TerritoryID;
        partial void OnTerritoryIDChanging(global::System.Int32 value);
        partial void OnTerritoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HCParentID
        {
            get
            {
                return _HCParentID;
            }
            set
            {
                OnHCParentIDChanging(value);
                ReportPropertyChanging("HCParentID");
                _HCParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCParentID");
                OnHCParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _HCParentID;
        partial void OnHCParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnHCParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeID;
        partial void OnEmployeeIDChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IHCPositionID
        {
            get
            {
                return _IHCPositionID;
            }
            set
            {
                OnIHCPositionIDChanging(value);
                ReportPropertyChanging("IHCPositionID");
                _IHCPositionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IHCPositionID");
                OnIHCPositionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _IHCPositionID;
        partial void OnIHCPositionIDChanging(Nullable<global::System.Int32> value);
        partial void OnIHCPositionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LaborGradeID
        {
            get
            {
                return _LaborGradeID;
            }
            set
            {
                OnLaborGradeIDChanging(value);
                ReportPropertyChanging("LaborGradeID");
                _LaborGradeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LaborGradeID");
                OnLaborGradeIDChanged();
            }
        }
        private global::System.Int32 _LaborGradeID;
        partial void OnLaborGradeIDChanging(global::System.Int32 value);
        partial void OnLaborGradeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FiscalTimeStartDateID
        {
            get
            {
                return _FiscalTimeStartDateID;
            }
            set
            {
                OnFiscalTimeStartDateIDChanging(value);
                ReportPropertyChanging("FiscalTimeStartDateID");
                _FiscalTimeStartDateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FiscalTimeStartDateID");
                OnFiscalTimeStartDateIDChanged();
            }
        }
        private global::System.Int32 _FiscalTimeStartDateID;
        partial void OnFiscalTimeStartDateIDChanging(global::System.Int32 value);
        partial void OnFiscalTimeStartDateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FiscalTimeEndDateID
        {
            get
            {
                return _FiscalTimeEndDateID;
            }
            set
            {
                OnFiscalTimeEndDateIDChanging(value);
                ReportPropertyChanging("FiscalTimeEndDateID");
                _FiscalTimeEndDateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FiscalTimeEndDateID");
                OnFiscalTimeEndDateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FiscalTimeEndDateID;
        partial void OnFiscalTimeEndDateIDChanging(Nullable<global::System.Int32> value);
        partial void OnFiscalTimeEndDateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HCTypeID
        {
            get
            {
                return _HCTypeID;
            }
            set
            {
                OnHCTypeIDChanging(value);
                ReportPropertyChanging("HCTypeID");
                _HCTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCTypeID");
                OnHCTypeIDChanged();
            }
        }
        private global::System.Int32 _HCTypeID;
        partial void OnHCTypeIDChanging(global::System.Int32 value);
        partial void OnHCTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CostCenterPrimaryID
        {
            get
            {
                return _CostCenterPrimaryID;
            }
            set
            {
                OnCostCenterPrimaryIDChanging(value);
                ReportPropertyChanging("CostCenterPrimaryID");
                _CostCenterPrimaryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostCenterPrimaryID");
                OnCostCenterPrimaryIDChanged();
            }
        }
        private global::System.Int32 _CostCenterPrimaryID;
        partial void OnCostCenterPrimaryIDChanging(global::System.Int32 value);
        partial void OnCostCenterPrimaryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HCStatusID
        {
            get
            {
                return _HCStatusID;
            }
            set
            {
                OnHCStatusIDChanging(value);
                ReportPropertyChanging("HCStatusID");
                _HCStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCStatusID");
                OnHCStatusIDChanged();
            }
        }
        private global::System.Int32 _HCStatusID;
        partial void OnHCStatusIDChanging(global::System.Int32 value);
        partial void OnHCStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsConversion
        {
            get
            {
                return _IsConversion;
            }
            set
            {
                OnIsConversionChanging(value);
                ReportPropertyChanging("IsConversion");
                _IsConversion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsConversion");
                OnIsConversionChanged();
            }
        }
        private global::System.Boolean _IsConversion;
        partial void OnIsConversionChanging(global::System.Boolean value);
        partial void OnIsConversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsNew
        {
            get
            {
                return _IsNew;
            }
            set
            {
                OnIsNewChanging(value);
                ReportPropertyChanging("IsNew");
                _IsNew = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNew");
                OnIsNewChanged();
            }
        }
        private global::System.Boolean _IsNew;
        partial void OnIsNewChanging(global::System.Boolean value);
        partial void OnIsNewChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HCRequestID
        {
            get
            {
                return _HCRequestID;
            }
            set
            {
                OnHCRequestIDChanging(value);
                ReportPropertyChanging("HCRequestID");
                _HCRequestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCRequestID");
                OnHCRequestIDChanged();
            }
        }
        private Nullable<global::System.Int32> _HCRequestID;
        partial void OnHCRequestIDChanging(Nullable<global::System.Int32> value);
        partial void OnHCRequestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] AnnualSalary
        {
            get
            {
                return StructuralObject.GetValidValue(_AnnualSalary);
            }
            set
            {
                OnAnnualSalaryChanging(value);
                ReportPropertyChanging("AnnualSalary");
                _AnnualSalary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AnnualSalary");
                OnAnnualSalaryChanged();
            }
        }
        private global::System.Byte[] _AnnualSalary;
        partial void OnAnnualSalaryChanging(global::System.Byte[] value);
        partial void OnAnnualSalaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CommisionsElegible
        {
            get
            {
                return _CommisionsElegible;
            }
            set
            {
                OnCommisionsElegibleChanging(value);
                ReportPropertyChanging("CommisionsElegible");
                _CommisionsElegible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommisionsElegible");
                OnCommisionsElegibleChanged();
            }
        }
        private Nullable<global::System.Boolean> _CommisionsElegible;
        partial void OnCommisionsElegibleChanging(Nullable<global::System.Boolean> value);
        partial void OnCommisionsElegibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BonusPlanId
        {
            get
            {
                return _BonusPlanId;
            }
            set
            {
                OnBonusPlanIdChanging(value);
                ReportPropertyChanging("BonusPlanId");
                _BonusPlanId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BonusPlanId");
                OnBonusPlanIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BonusPlanId;
        partial void OnBonusPlanIdChanging(Nullable<global::System.Int32> value);
        partial void OnBonusPlanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PersonalSubAreaId
        {
            get
            {
                return _PersonalSubAreaId;
            }
            set
            {
                OnPersonalSubAreaIdChanging(value);
                ReportPropertyChanging("PersonalSubAreaId");
                _PersonalSubAreaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonalSubAreaId");
                OnPersonalSubAreaIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PersonalSubAreaId;
        partial void OnPersonalSubAreaIdChanging(Nullable<global::System.Int32> value);
        partial void OnPersonalSubAreaIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_HCPositions", "HCPosition")]
        public HCPosition HCPosition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_HCPositions", "HCPosition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_HCPositions", "HCPosition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCPosition> HCPositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_HCPositions", "HCPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_HCPositions", "HCPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_HCPositions1", "HCPosition")]
        public HCPosition HCPosition1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_HCPositions1", "HCPosition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_HCPositions1", "HCPosition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCPosition> HCPosition1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_HCPositions1", "HCPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_HCPositions1", "HCPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_HCTypes", "HCType")]
        public HCType HCType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCType>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_HCTypes", "HCType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCType>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_HCTypes", "HCType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCType> HCTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCType>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_HCTypes", "HCType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCType>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_HCTypes", "HCType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanPositions_HCPositionLogs", "SBForecastPlanPosition")]
        public EntityCollection<SBForecastPlanPosition> SBForecastPlanPositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SBForecastPlanPosition>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanPositions_HCPositionLogs", "SBForecastPlanPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SBForecastPlanPosition>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanPositions_HCPositionLogs", "SBForecastPlanPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_CostCenters", "CostCenter")]
        public CostCenter CostCenter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostCenter>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_CostCenters", "CostCenter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostCenter>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_CostCenters", "CostCenter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CostCenter> CostCenterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostCenter>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_CostCenters", "CostCenter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CostCenter>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_CostCenters", "CostCenter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_Employees", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_Employees", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_Employees", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_Employees", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_Employees", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_Lobs", "Lob")]
        public Lob Lob
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lob>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_Lobs", "Lob").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lob>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_Lobs", "Lob").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lob> LobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lob>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_Lobs", "Lob");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lob>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_Lobs", "Lob", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="HCType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HCType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HCType object.
        /// </summary>
        /// <param name="hCTypeID">Initial value of the HCTypeID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isTemporal">Initial value of the IsTemporal property.</param>
        /// <param name="isAdjust">Initial value of the IsAdjust property.</param>
        /// <param name="aDMWAccountID">Initial value of the ADMWAccountID property.</param>
        /// <param name="aDMWAccountType">Initial value of the ADMWAccountType property.</param>
        public static HCType CreateHCType(global::System.Int32 hCTypeID, global::System.String description, global::System.String code, global::System.Boolean isActive, global::System.Boolean isTemporal, global::System.Boolean isAdjust, global::System.Int32 aDMWAccountID, global::System.String aDMWAccountType)
        {
            HCType hCType = new HCType();
            hCType.HCTypeID = hCTypeID;
            hCType.Description = description;
            hCType.Code = code;
            hCType.IsActive = isActive;
            hCType.IsTemporal = isTemporal;
            hCType.IsAdjust = isAdjust;
            hCType.ADMWAccountID = aDMWAccountID;
            hCType.ADMWAccountType = aDMWAccountType;
            return hCType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HCTypeID
        {
            get
            {
                return _HCTypeID;
            }
            set
            {
                if (_HCTypeID != value)
                {
                    OnHCTypeIDChanging(value);
                    ReportPropertyChanging("HCTypeID");
                    _HCTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HCTypeID");
                    OnHCTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _HCTypeID;
        partial void OnHCTypeIDChanging(global::System.Int32 value);
        partial void OnHCTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsTemporal
        {
            get
            {
                return _IsTemporal;
            }
            set
            {
                OnIsTemporalChanging(value);
                ReportPropertyChanging("IsTemporal");
                _IsTemporal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsTemporal");
                OnIsTemporalChanged();
            }
        }
        private global::System.Boolean _IsTemporal;
        partial void OnIsTemporalChanging(global::System.Boolean value);
        partial void OnIsTemporalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAdjust
        {
            get
            {
                return _IsAdjust;
            }
            set
            {
                OnIsAdjustChanging(value);
                ReportPropertyChanging("IsAdjust");
                _IsAdjust = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAdjust");
                OnIsAdjustChanged();
            }
        }
        private global::System.Boolean _IsAdjust;
        partial void OnIsAdjustChanging(global::System.Boolean value);
        partial void OnIsAdjustChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ADMWAccountID
        {
            get
            {
                return _ADMWAccountID;
            }
            set
            {
                OnADMWAccountIDChanging(value);
                ReportPropertyChanging("ADMWAccountID");
                _ADMWAccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ADMWAccountID");
                OnADMWAccountIDChanged();
            }
        }
        private global::System.Int32 _ADMWAccountID;
        partial void OnADMWAccountIDChanging(global::System.Int32 value);
        partial void OnADMWAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ADMWAccountType
        {
            get
            {
                return _ADMWAccountType;
            }
            set
            {
                OnADMWAccountTypeChanging(value);
                ReportPropertyChanging("ADMWAccountType");
                _ADMWAccountType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ADMWAccountType");
                OnADMWAccountTypeChanged();
            }
        }
        private global::System.String _ADMWAccountType;
        partial void OnADMWAccountTypeChanging(global::System.String value);
        partial void OnADMWAccountTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Schemes_HCTypes", "Scheme")]
        public EntityCollection<Scheme> Schemes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Scheme>("DisneyHCMLatamPlanningDevModel.FK_Schemes_HCTypes", "Scheme");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Scheme>("DisneyHCMLatamPlanningDevModel.FK_Schemes_HCTypes", "Scheme", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositions_HCTypes", "HCPosition")]
        public EntityCollection<HCPosition> HCPositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_HCTypes", "HCPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_HCTypes", "HCPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_HCTypes", "HCPositionLog")]
        public EntityCollection<HCPositionLog> HCPositionLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCPositionLog>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_HCTypes", "HCPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCPositionLog>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_HCTypes", "HCPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_HCTypes", "SBForecastPlanAdjustment")]
        public EntityCollection<SBForecastPlanAdjustment> SBForecastPlanAdjustments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SBForecastPlanAdjustment>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_HCTypes", "SBForecastPlanAdjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SBForecastPlanAdjustment>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_HCTypes", "SBForecastPlanAdjustment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="Lob")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lob : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lob object.
        /// </summary>
        /// <param name="lobID">Initial value of the LobID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Lob CreateLob(global::System.Int32 lobID, global::System.String description, global::System.Boolean isActive)
        {
            Lob lob = new Lob();
            lob.LobID = lobID;
            lob.Description = description;
            lob.IsActive = isActive;
            return lob;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LobID
        {
            get
            {
                return _LobID;
            }
            set
            {
                if (_LobID != value)
                {
                    OnLobIDChanging(value);
                    ReportPropertyChanging("LobID");
                    _LobID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LobID");
                    OnLobIDChanged();
                }
            }
        }
        private global::System.Int32 _LobID;
        partial void OnLobIDChanging(global::System.Int32 value);
        partial void OnLobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositionLogs_Lobs", "HCPositionLog")]
        public EntityCollection<HCPositionLog> HCPositionLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCPositionLog>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_Lobs", "HCPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCPositionLog>("DisneyHCMLatamPlanningDevModel.FK_HCPositionLogs_Lobs", "HCPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_HCPositions_Lobs", "HCPosition")]
        public EntityCollection<HCPosition> HCPositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_Lobs", "HCPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCPosition>("DisneyHCMLatamPlanningDevModel.FK_HCPositions_Lobs", "HCPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_Lobs", "SBForecastPlanAdjustment")]
        public EntityCollection<SBForecastPlanAdjustment> SBForecastPlanAdjustments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SBForecastPlanAdjustment>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_Lobs", "SBForecastPlanAdjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SBForecastPlanAdjustment>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_Lobs", "SBForecastPlanAdjustment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_Lobs1", "SBForecastPlanAdjustment")]
        public EntityCollection<SBForecastPlanAdjustment> SBForecastPlanAdjustments1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SBForecastPlanAdjustment>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_Lobs1", "SBForecastPlanAdjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SBForecastPlanAdjustment>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_Lobs1", "SBForecastPlanAdjustment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="ModifiedGlobalsMonthValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ModifiedGlobalsMonthValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ModifiedGlobalsMonthValue object.
        /// </summary>
        /// <param name="modifiedGlobalsMonthValuesId">Initial value of the ModifiedGlobalsMonthValuesId property.</param>
        /// <param name="sBForecastPlanModifiedGlobalId">Initial value of the SBForecastPlanModifiedGlobalId property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static ModifiedGlobalsMonthValue CreateModifiedGlobalsMonthValue(global::System.Int32 modifiedGlobalsMonthValuesId, global::System.Int32 sBForecastPlanModifiedGlobalId, global::System.Int32 month, global::System.Decimal value)
        {
            ModifiedGlobalsMonthValue modifiedGlobalsMonthValue = new ModifiedGlobalsMonthValue();
            modifiedGlobalsMonthValue.ModifiedGlobalsMonthValuesId = modifiedGlobalsMonthValuesId;
            modifiedGlobalsMonthValue.SBForecastPlanModifiedGlobalId = sBForecastPlanModifiedGlobalId;
            modifiedGlobalsMonthValue.Month = month;
            modifiedGlobalsMonthValue.Value = value;
            return modifiedGlobalsMonthValue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModifiedGlobalsMonthValuesId
        {
            get
            {
                return _ModifiedGlobalsMonthValuesId;
            }
            set
            {
                if (_ModifiedGlobalsMonthValuesId != value)
                {
                    OnModifiedGlobalsMonthValuesIdChanging(value);
                    ReportPropertyChanging("ModifiedGlobalsMonthValuesId");
                    _ModifiedGlobalsMonthValuesId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ModifiedGlobalsMonthValuesId");
                    OnModifiedGlobalsMonthValuesIdChanged();
                }
            }
        }
        private global::System.Int32 _ModifiedGlobalsMonthValuesId;
        partial void OnModifiedGlobalsMonthValuesIdChanging(global::System.Int32 value);
        partial void OnModifiedGlobalsMonthValuesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SBForecastPlanModifiedGlobalId
        {
            get
            {
                return _SBForecastPlanModifiedGlobalId;
            }
            set
            {
                OnSBForecastPlanModifiedGlobalIdChanging(value);
                ReportPropertyChanging("SBForecastPlanModifiedGlobalId");
                _SBForecastPlanModifiedGlobalId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SBForecastPlanModifiedGlobalId");
                OnSBForecastPlanModifiedGlobalIdChanged();
            }
        }
        private global::System.Int32 _SBForecastPlanModifiedGlobalId;
        partial void OnSBForecastPlanModifiedGlobalIdChanging(global::System.Int32 value);
        partial void OnSBForecastPlanModifiedGlobalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.Int32 _Month;
        partial void OnMonthChanging(global::System.Int32 value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ModifiedGlobalsMonthValues_SBForecastPlanModifiedGlobals", "SBForecastPlanModifiedGlobal")]
        public SBForecastPlanModifiedGlobal SBForecastPlanModifiedGlobal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlanModifiedGlobal>("DisneyHCMLatamPlanningDevModel.FK_ModifiedGlobalsMonthValues_SBForecastPlanModifiedGlobals", "SBForecastPlanModifiedGlobal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlanModifiedGlobal>("DisneyHCMLatamPlanningDevModel.FK_ModifiedGlobalsMonthValues_SBForecastPlanModifiedGlobals", "SBForecastPlanModifiedGlobal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SBForecastPlanModifiedGlobal> SBForecastPlanModifiedGlobalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlanModifiedGlobal>("DisneyHCMLatamPlanningDevModel.FK_ModifiedGlobalsMonthValues_SBForecastPlanModifiedGlobals", "SBForecastPlanModifiedGlobal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SBForecastPlanModifiedGlobal>("DisneyHCMLatamPlanningDevModel.FK_ModifiedGlobalsMonthValues_SBForecastPlanModifiedGlobals", "SBForecastPlanModifiedGlobal", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="Parameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Parameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Parameter object.
        /// </summary>
        /// <param name="parameterId">Initial value of the ParameterId property.</param>
        /// <param name="parameterTypeId">Initial value of the ParameterTypeId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isAccumulator">Initial value of the IsAccumulator property.</param>
        /// <param name="isConstant">Initial value of the IsConstant property.</param>
        /// <param name="isModifiable">Initial value of the IsModifiable property.</param>
        public static Parameter CreateParameter(global::System.Int32 parameterId, global::System.Int32 parameterTypeId, global::System.Int32 companyId, global::System.String name, global::System.String description, global::System.Boolean isAccumulator, global::System.Boolean isConstant, global::System.Boolean isModifiable)
        {
            Parameter parameter = new Parameter();
            parameter.ParameterId = parameterId;
            parameter.ParameterTypeId = parameterTypeId;
            parameter.CompanyId = companyId;
            parameter.Name = name;
            parameter.Description = description;
            parameter.IsAccumulator = isAccumulator;
            parameter.IsConstant = isConstant;
            parameter.IsModifiable = isModifiable;
            return parameter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterId
        {
            get
            {
                return _ParameterId;
            }
            set
            {
                if (_ParameterId != value)
                {
                    OnParameterIdChanging(value);
                    ReportPropertyChanging("ParameterId");
                    _ParameterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParameterId");
                    OnParameterIdChanged();
                }
            }
        }
        private global::System.Int32 _ParameterId;
        partial void OnParameterIdChanging(global::System.Int32 value);
        partial void OnParameterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterTypeId
        {
            get
            {
                return _ParameterTypeId;
            }
            set
            {
                OnParameterTypeIdChanging(value);
                ReportPropertyChanging("ParameterTypeId");
                _ParameterTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParameterTypeId");
                OnParameterTypeIdChanged();
            }
        }
        private global::System.Int32 _ParameterTypeId;
        partial void OnParameterTypeIdChanging(global::System.Int32 value);
        partial void OnParameterTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParameterDataTypeID
        {
            get
            {
                return _ParameterDataTypeID;
            }
            set
            {
                OnParameterDataTypeIDChanging(value);
                ReportPropertyChanging("ParameterDataTypeID");
                _ParameterDataTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParameterDataTypeID");
                OnParameterDataTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParameterDataTypeID;
        partial void OnParameterDataTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnParameterDataTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAccumulator
        {
            get
            {
                return _IsAccumulator;
            }
            set
            {
                OnIsAccumulatorChanging(value);
                ReportPropertyChanging("IsAccumulator");
                _IsAccumulator = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAccumulator");
                OnIsAccumulatorChanged();
            }
        }
        private global::System.Boolean _IsAccumulator;
        partial void OnIsAccumulatorChanging(global::System.Boolean value);
        partial void OnIsAccumulatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsConstant
        {
            get
            {
                return _IsConstant;
            }
            set
            {
                OnIsConstantChanging(value);
                ReportPropertyChanging("IsConstant");
                _IsConstant = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsConstant");
                OnIsConstantChanged();
            }
        }
        private global::System.Boolean _IsConstant;
        partial void OnIsConstantChanging(global::System.Boolean value);
        partial void OnIsConstantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsModifiable
        {
            get
            {
                return _IsModifiable;
            }
            set
            {
                OnIsModifiableChanging(value);
                ReportPropertyChanging("IsModifiable");
                _IsModifiable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsModifiable");
                OnIsModifiableChanged();
            }
        }
        private global::System.Boolean _IsModifiable;
        partial void OnIsModifiableChanging(global::System.Boolean value);
        partial void OnIsModifiableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TableName
        {
            get
            {
                return _TableName;
            }
            set
            {
                OnTableNameChanging(value);
                ReportPropertyChanging("TableName");
                _TableName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TableName");
                OnTableNameChanged();
            }
        }
        private global::System.String _TableName;
        partial void OnTableNameChanging(global::System.String value);
        partial void OnTableNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnName
        {
            get
            {
                return _ColumnName;
            }
            set
            {
                OnColumnNameChanging(value);
                ReportPropertyChanging("ColumnName");
                _ColumnName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnName");
                OnColumnNameChanged();
            }
        }
        private global::System.String _ColumnName;
        partial void OnColumnNameChanging(global::System.String value);
        partial void OnColumnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FixedValue
        {
            get
            {
                return _FixedValue;
            }
            set
            {
                OnFixedValueChanging(value);
                ReportPropertyChanging("FixedValue");
                _FixedValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FixedValue");
                OnFixedValueChanged();
            }
        }
        private global::System.String _FixedValue;
        partial void OnFixedValueChanging(global::System.String value);
        partial void OnFixedValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Parameters_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_Parameters_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_Parameters_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_Parameters_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_Parameters_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Filters_Parameters", "Filter")]
        public EntityCollection<Filter> Filters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Filter>("DisneyHCMLatamPlanningDevModel.FK_Filters_Parameters", "Filter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Filter>("DisneyHCMLatamPlanningDevModel.FK_Filters_Parameters", "Filter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Filters_Parameters1", "Filter")]
        public EntityCollection<Filter> Filters1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Filter>("DisneyHCMLatamPlanningDevModel.FK_Filters_Parameters1", "Filter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Filter>("DisneyHCMLatamPlanningDevModel.FK_Filters_Parameters1", "Filter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Parameters_ParameterDataType", "ParameterDataType")]
        public ParameterDataType ParameterDataType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParameterDataType>("DisneyHCMLatamPlanningDevModel.FK_Parameters_ParameterDataType", "ParameterDataType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParameterDataType>("DisneyHCMLatamPlanningDevModel.FK_Parameters_ParameterDataType", "ParameterDataType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParameterDataType> ParameterDataTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParameterDataType>("DisneyHCMLatamPlanningDevModel.FK_Parameters_ParameterDataType", "ParameterDataType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParameterDataType>("DisneyHCMLatamPlanningDevModel.FK_Parameters_ParameterDataType", "ParameterDataType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Parameters_ParameterTypes", "ParameterType")]
        public ParameterType ParameterType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParameterType>("DisneyHCMLatamPlanningDevModel.FK_Parameters_ParameterTypes", "ParameterType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParameterType>("DisneyHCMLatamPlanningDevModel.FK_Parameters_ParameterTypes", "ParameterType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParameterType> ParameterTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParameterType>("DisneyHCMLatamPlanningDevModel.FK_Parameters_ParameterTypes", "ParameterType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParameterType>("DisneyHCMLatamPlanningDevModel.FK_Parameters_ParameterTypes", "ParameterType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ParameterValues_Parameters", "ParameterValue")]
        public EntityCollection<ParameterValue> ParameterValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ParameterValue>("DisneyHCMLatamPlanningDevModel.FK_ParameterValues_Parameters", "ParameterValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ParameterValue>("DisneyHCMLatamPlanningDevModel.FK_ParameterValues_Parameters", "ParameterValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ResultParameters_Parameters", "ResultParameter")]
        public EntityCollection<ResultParameter> ResultParameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResultParameter>("DisneyHCMLatamPlanningDevModel.FK_ResultParameters_Parameters", "ResultParameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResultParameter>("DisneyHCMLatamPlanningDevModel.FK_ResultParameters_Parameters", "ResultParameter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanModifiedGlobals_Parameters", "SBForecastPlanModifiedGlobal")]
        public EntityCollection<SBForecastPlanModifiedGlobal> SBForecastPlanModifiedGlobals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SBForecastPlanModifiedGlobal>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanModifiedGlobals_Parameters", "SBForecastPlanModifiedGlobal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SBForecastPlanModifiedGlobal>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanModifiedGlobals_Parameters", "SBForecastPlanModifiedGlobal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_OutputParameter1", "Concept")]
        public EntityCollection<Concept> Concepts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Concept>("DisneyHCMLatamPlanningDevModel.FK_Concepts_OutputParameter1", "Concept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Concept>("DisneyHCMLatamPlanningDevModel.FK_Concepts_OutputParameter1", "Concept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_OutputParameter2", "Concept")]
        public EntityCollection<Concept> Concepts1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Concept>("DisneyHCMLatamPlanningDevModel.FK_Concepts_OutputParameter2", "Concept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Concept>("DisneyHCMLatamPlanningDevModel.FK_Concepts_OutputParameter2", "Concept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_Parameters1", "Concept")]
        public EntityCollection<Concept> Concepts2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Concept>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters1", "Concept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Concept>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters1", "Concept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_Parameters2", "Concept")]
        public EntityCollection<Concept> Concepts3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Concept>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters2", "Concept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Concept>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters2", "Concept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_Parameters3", "Concept")]
        public EntityCollection<Concept> Concepts4
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Concept>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters3", "Concept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Concept>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters3", "Concept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_Parameters4", "Concept")]
        public EntityCollection<Concept> Concepts5
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Concept>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters4", "Concept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Concept>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Parameters4", "Concept", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="ParameterDataType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParameterDataType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParameterDataType object.
        /// </summary>
        /// <param name="parameterDataTypeID">Initial value of the ParameterDataTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static ParameterDataType CreateParameterDataType(global::System.Int32 parameterDataTypeID, global::System.String name, global::System.Boolean isActive)
        {
            ParameterDataType parameterDataType = new ParameterDataType();
            parameterDataType.ParameterDataTypeID = parameterDataTypeID;
            parameterDataType.Name = name;
            parameterDataType.IsActive = isActive;
            return parameterDataType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterDataTypeID
        {
            get
            {
                return _ParameterDataTypeID;
            }
            set
            {
                if (_ParameterDataTypeID != value)
                {
                    OnParameterDataTypeIDChanging(value);
                    ReportPropertyChanging("ParameterDataTypeID");
                    _ParameterDataTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParameterDataTypeID");
                    OnParameterDataTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ParameterDataTypeID;
        partial void OnParameterDataTypeIDChanging(global::System.Int32 value);
        partial void OnParameterDataTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Parameters_ParameterDataType", "Parameter")]
        public EntityCollection<Parameter> Parameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Parameters_ParameterDataType", "Parameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Parameters_ParameterDataType", "Parameter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanData_ParameterDataType", "SBForecastPlanData")]
        public EntityCollection<SBForecastPlanData> SBForecastPlanDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SBForecastPlanData>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanData_ParameterDataType", "SBForecastPlanData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SBForecastPlanData>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanData_ParameterDataType", "SBForecastPlanData", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="ParameterMonthValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParameterMonthValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParameterMonthValue object.
        /// </summary>
        /// <param name="parameterMonthValueId">Initial value of the ParameterMonthValueId property.</param>
        /// <param name="parameterValueId">Initial value of the ParameterValueId property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static ParameterMonthValue CreateParameterMonthValue(global::System.Int32 parameterMonthValueId, global::System.Int32 parameterValueId, global::System.Int32 month, global::System.Decimal value)
        {
            ParameterMonthValue parameterMonthValue = new ParameterMonthValue();
            parameterMonthValue.ParameterMonthValueId = parameterMonthValueId;
            parameterMonthValue.ParameterValueId = parameterValueId;
            parameterMonthValue.Month = month;
            parameterMonthValue.Value = value;
            return parameterMonthValue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterMonthValueId
        {
            get
            {
                return _ParameterMonthValueId;
            }
            set
            {
                if (_ParameterMonthValueId != value)
                {
                    OnParameterMonthValueIdChanging(value);
                    ReportPropertyChanging("ParameterMonthValueId");
                    _ParameterMonthValueId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParameterMonthValueId");
                    OnParameterMonthValueIdChanged();
                }
            }
        }
        private global::System.Int32 _ParameterMonthValueId;
        partial void OnParameterMonthValueIdChanging(global::System.Int32 value);
        partial void OnParameterMonthValueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterValueId
        {
            get
            {
                return _ParameterValueId;
            }
            set
            {
                OnParameterValueIdChanging(value);
                ReportPropertyChanging("ParameterValueId");
                _ParameterValueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParameterValueId");
                OnParameterValueIdChanged();
            }
        }
        private global::System.Int32 _ParameterValueId;
        partial void OnParameterValueIdChanging(global::System.Int32 value);
        partial void OnParameterValueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.Int32 _Month;
        partial void OnMonthChanging(global::System.Int32 value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ParameterMonthValues_ParameterValues", "ParameterValue")]
        public ParameterValue ParameterValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParameterValue>("DisneyHCMLatamPlanningDevModel.FK_ParameterMonthValues_ParameterValues", "ParameterValue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParameterValue>("DisneyHCMLatamPlanningDevModel.FK_ParameterMonthValues_ParameterValues", "ParameterValue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParameterValue> ParameterValueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParameterValue>("DisneyHCMLatamPlanningDevModel.FK_ParameterMonthValues_ParameterValues", "ParameterValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParameterValue>("DisneyHCMLatamPlanningDevModel.FK_ParameterMonthValues_ParameterValues", "ParameterValue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="ParameterType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParameterType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParameterType object.
        /// </summary>
        /// <param name="parameterTypeId">Initial value of the ParameterTypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ParameterType CreateParameterType(global::System.Int32 parameterTypeId, global::System.String name)
        {
            ParameterType parameterType = new ParameterType();
            parameterType.ParameterTypeId = parameterTypeId;
            parameterType.Name = name;
            return parameterType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterTypeId
        {
            get
            {
                return _ParameterTypeId;
            }
            set
            {
                if (_ParameterTypeId != value)
                {
                    OnParameterTypeIdChanging(value);
                    ReportPropertyChanging("ParameterTypeId");
                    _ParameterTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParameterTypeId");
                    OnParameterTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ParameterTypeId;
        partial void OnParameterTypeIdChanging(global::System.Int32 value);
        partial void OnParameterTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Parameters_ParameterTypes", "Parameter")]
        public EntityCollection<Parameter> Parameters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Parameters_ParameterTypes", "Parameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Parameter>("DisneyHCMLatamPlanningDevModel.FK_Parameters_ParameterTypes", "Parameter", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="ParameterValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParameterValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParameterValue object.
        /// </summary>
        /// <param name="parameterValuesId">Initial value of the ParameterValuesId property.</param>
        /// <param name="parameterId">Initial value of the ParameterId property.</param>
        public static ParameterValue CreateParameterValue(global::System.Int32 parameterValuesId, global::System.Int32 parameterId)
        {
            ParameterValue parameterValue = new ParameterValue();
            parameterValue.ParameterValuesId = parameterValuesId;
            parameterValue.ParameterId = parameterId;
            return parameterValue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterValuesId
        {
            get
            {
                return _ParameterValuesId;
            }
            set
            {
                if (_ParameterValuesId != value)
                {
                    OnParameterValuesIdChanging(value);
                    ReportPropertyChanging("ParameterValuesId");
                    _ParameterValuesId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParameterValuesId");
                    OnParameterValuesIdChanged();
                }
            }
        }
        private global::System.Int32 _ParameterValuesId;
        partial void OnParameterValuesIdChanging(global::System.Int32 value);
        partial void OnParameterValuesIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterId
        {
            get
            {
                return _ParameterId;
            }
            set
            {
                OnParameterIdChanging(value);
                ReportPropertyChanging("ParameterId");
                _ParameterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParameterId");
                OnParameterIdChanged();
            }
        }
        private global::System.Int32 _ParameterId;
        partial void OnParameterIdChanging(global::System.Int32 value);
        partial void OnParameterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FiscalYearID
        {
            get
            {
                return _FiscalYearID;
            }
            set
            {
                OnFiscalYearIDChanging(value);
                ReportPropertyChanging("FiscalYearID");
                _FiscalYearID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FiscalYearID");
                OnFiscalYearIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FiscalYearID;
        partial void OnFiscalYearIDChanging(Nullable<global::System.Int32> value);
        partial void OnFiscalYearIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ParameterValues_FiscalYears", "FiscalYear")]
        public FiscalYear FiscalYear
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FiscalYear>("DisneyHCMLatamPlanningDevModel.FK_ParameterValues_FiscalYears", "FiscalYear").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FiscalYear>("DisneyHCMLatamPlanningDevModel.FK_ParameterValues_FiscalYears", "FiscalYear").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FiscalYear> FiscalYearReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FiscalYear>("DisneyHCMLatamPlanningDevModel.FK_ParameterValues_FiscalYears", "FiscalYear");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FiscalYear>("DisneyHCMLatamPlanningDevModel.FK_ParameterValues_FiscalYears", "FiscalYear", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ParameterMonthValues_ParameterValues", "ParameterMonthValue")]
        public EntityCollection<ParameterMonthValue> ParameterMonthValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ParameterMonthValue>("DisneyHCMLatamPlanningDevModel.FK_ParameterMonthValues_ParameterValues", "ParameterMonthValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ParameterMonthValue>("DisneyHCMLatamPlanningDevModel.FK_ParameterMonthValues_ParameterValues", "ParameterMonthValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ParameterValues_Parameters", "Parameter")]
        public Parameter Parameter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_ParameterValues_Parameters", "Parameter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_ParameterValues_Parameters", "Parameter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parameter> ParameterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_ParameterValues_Parameters", "Parameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_ParameterValues_Parameters", "Parameter", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="ResultParameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResultParameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResultParameter object.
        /// </summary>
        /// <param name="resultParameterId">Initial value of the ResultParameterId property.</param>
        /// <param name="conceptResultId">Initial value of the ConceptResultId property.</param>
        /// <param name="parameterId">Initial value of the ParameterId property.</param>
        public static ResultParameter CreateResultParameter(global::System.Int32 resultParameterId, global::System.Int32 conceptResultId, global::System.Int32 parameterId)
        {
            ResultParameter resultParameter = new ResultParameter();
            resultParameter.ResultParameterId = resultParameterId;
            resultParameter.ConceptResultId = conceptResultId;
            resultParameter.ParameterId = parameterId;
            return resultParameter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultParameterId
        {
            get
            {
                return _ResultParameterId;
            }
            set
            {
                if (_ResultParameterId != value)
                {
                    OnResultParameterIdChanging(value);
                    ReportPropertyChanging("ResultParameterId");
                    _ResultParameterId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResultParameterId");
                    OnResultParameterIdChanged();
                }
            }
        }
        private global::System.Int32 _ResultParameterId;
        partial void OnResultParameterIdChanging(global::System.Int32 value);
        partial void OnResultParameterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ConceptResultId
        {
            get
            {
                return _ConceptResultId;
            }
            set
            {
                OnConceptResultIdChanging(value);
                ReportPropertyChanging("ConceptResultId");
                _ConceptResultId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConceptResultId");
                OnConceptResultIdChanged();
            }
        }
        private global::System.Int32 _ConceptResultId;
        partial void OnConceptResultIdChanging(global::System.Int32 value);
        partial void OnConceptResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterId
        {
            get
            {
                return _ParameterId;
            }
            set
            {
                OnParameterIdChanging(value);
                ReportPropertyChanging("ParameterId");
                _ParameterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParameterId");
                OnParameterIdChanged();
            }
        }
        private global::System.Int32 _ParameterId;
        partial void OnParameterIdChanging(global::System.Int32 value);
        partial void OnParameterIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ResultParameters_Parameters", "Parameter")]
        public Parameter Parameter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_ResultParameters_Parameters", "Parameter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_ResultParameters_Parameters", "Parameter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parameter> ParameterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_ResultParameters_Parameters", "Parameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_ResultParameters_Parameters", "Parameter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ResultParameterMonthValues_ResultParameters", "ResultParameterMonthValue")]
        public EntityCollection<ResultParameterMonthValue> ResultParameterMonthValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResultParameterMonthValue>("DisneyHCMLatamPlanningDevModel.FK_ResultParameterMonthValues_ResultParameters", "ResultParameterMonthValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResultParameterMonthValue>("DisneyHCMLatamPlanningDevModel.FK_ResultParameterMonthValues_ResultParameters", "ResultParameterMonthValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ResultParameters_ConceptResults", "ConceptResult")]
        public ConceptResult ConceptResult
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConceptResult>("DisneyHCMLatamPlanningDevModel.FK_ResultParameters_ConceptResults", "ConceptResult").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConceptResult>("DisneyHCMLatamPlanningDevModel.FK_ResultParameters_ConceptResults", "ConceptResult").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ConceptResult> ConceptResultReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConceptResult>("DisneyHCMLatamPlanningDevModel.FK_ResultParameters_ConceptResults", "ConceptResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ConceptResult>("DisneyHCMLatamPlanningDevModel.FK_ResultParameters_ConceptResults", "ConceptResult", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="ResultParameterMonthValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResultParameterMonthValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResultParameterMonthValue object.
        /// </summary>
        /// <param name="resultParameterMonthValueId">Initial value of the ResultParameterMonthValueId property.</param>
        /// <param name="resultParameterId">Initial value of the ResultParameterId property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static ResultParameterMonthValue CreateResultParameterMonthValue(global::System.Int32 resultParameterMonthValueId, global::System.Int32 resultParameterId, global::System.Int32 month, global::System.Decimal value)
        {
            ResultParameterMonthValue resultParameterMonthValue = new ResultParameterMonthValue();
            resultParameterMonthValue.ResultParameterMonthValueId = resultParameterMonthValueId;
            resultParameterMonthValue.ResultParameterId = resultParameterId;
            resultParameterMonthValue.Month = month;
            resultParameterMonthValue.Value = value;
            return resultParameterMonthValue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultParameterMonthValueId
        {
            get
            {
                return _ResultParameterMonthValueId;
            }
            set
            {
                if (_ResultParameterMonthValueId != value)
                {
                    OnResultParameterMonthValueIdChanging(value);
                    ReportPropertyChanging("ResultParameterMonthValueId");
                    _ResultParameterMonthValueId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResultParameterMonthValueId");
                    OnResultParameterMonthValueIdChanged();
                }
            }
        }
        private global::System.Int32 _ResultParameterMonthValueId;
        partial void OnResultParameterMonthValueIdChanging(global::System.Int32 value);
        partial void OnResultParameterMonthValueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultParameterId
        {
            get
            {
                return _ResultParameterId;
            }
            set
            {
                OnResultParameterIdChanging(value);
                ReportPropertyChanging("ResultParameterId");
                _ResultParameterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultParameterId");
                OnResultParameterIdChanged();
            }
        }
        private global::System.Int32 _ResultParameterId;
        partial void OnResultParameterIdChanging(global::System.Int32 value);
        partial void OnResultParameterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.Int32 _Month;
        partial void OnMonthChanging(global::System.Int32 value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ResultParameterMonthValues_ResultParameters", "ResultParameter")]
        public ResultParameter ResultParameter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResultParameter>("DisneyHCMLatamPlanningDevModel.FK_ResultParameterMonthValues_ResultParameters", "ResultParameter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResultParameter>("DisneyHCMLatamPlanningDevModel.FK_ResultParameterMonthValues_ResultParameters", "ResultParameter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResultParameter> ResultParameterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResultParameter>("DisneyHCMLatamPlanningDevModel.FK_ResultParameterMonthValues_ResultParameters", "ResultParameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResultParameter>("DisneyHCMLatamPlanningDevModel.FK_ResultParameterMonthValues_ResultParameters", "ResultParameter", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="SBForecastPlan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SBForecastPlan : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SBForecastPlan object.
        /// </summary>
        /// <param name="sBForecastPlanId">Initial value of the SBForecastPlanId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="fiscalYearId">Initial value of the FiscalYearId property.</param>
        /// <param name="monthFrom">Initial value of the MonthFrom property.</param>
        /// <param name="monthTo">Initial value of the MonthTo property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="sBForecastPlanStatusId">Initial value of the SBForecastPlanStatusId property.</param>
        public static SBForecastPlan CreateSBForecastPlan(global::System.Int32 sBForecastPlanId, global::System.String name, global::System.String description, global::System.Int32 fiscalYearId, global::System.Int32 monthFrom, global::System.Int32 monthTo, global::System.DateTime creationDate, global::System.String userName, global::System.Int32 sBForecastPlanStatusId)
        {
            SBForecastPlan sBForecastPlan = new SBForecastPlan();
            sBForecastPlan.SBForecastPlanId = sBForecastPlanId;
            sBForecastPlan.Name = name;
            sBForecastPlan.Description = description;
            sBForecastPlan.FiscalYearId = fiscalYearId;
            sBForecastPlan.MonthFrom = monthFrom;
            sBForecastPlan.MonthTo = monthTo;
            sBForecastPlan.CreationDate = creationDate;
            sBForecastPlan.UserName = userName;
            sBForecastPlan.SBForecastPlanStatusId = sBForecastPlanStatusId;
            return sBForecastPlan;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SBForecastPlanId
        {
            get
            {
                return _SBForecastPlanId;
            }
            set
            {
                if (_SBForecastPlanId != value)
                {
                    OnSBForecastPlanIdChanging(value);
                    ReportPropertyChanging("SBForecastPlanId");
                    _SBForecastPlanId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SBForecastPlanId");
                    OnSBForecastPlanIdChanged();
                }
            }
        }
        private global::System.Int32 _SBForecastPlanId;
        partial void OnSBForecastPlanIdChanging(global::System.Int32 value);
        partial void OnSBForecastPlanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FiscalYearId
        {
            get
            {
                return _FiscalYearId;
            }
            set
            {
                OnFiscalYearIdChanging(value);
                ReportPropertyChanging("FiscalYearId");
                _FiscalYearId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FiscalYearId");
                OnFiscalYearIdChanged();
            }
        }
        private global::System.Int32 _FiscalYearId;
        partial void OnFiscalYearIdChanging(global::System.Int32 value);
        partial void OnFiscalYearIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthFrom
        {
            get
            {
                return _MonthFrom;
            }
            set
            {
                OnMonthFromChanging(value);
                ReportPropertyChanging("MonthFrom");
                _MonthFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonthFrom");
                OnMonthFromChanged();
            }
        }
        private global::System.Int32 _MonthFrom;
        partial void OnMonthFromChanging(global::System.Int32 value);
        partial void OnMonthFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonthTo
        {
            get
            {
                return _MonthTo;
            }
            set
            {
                OnMonthToChanging(value);
                ReportPropertyChanging("MonthTo");
                _MonthTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MonthTo");
                OnMonthToChanged();
            }
        }
        private global::System.Int32 _MonthTo;
        partial void OnMonthToChanging(global::System.Int32 value);
        partial void OnMonthToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExecutionDate
        {
            get
            {
                return _ExecutionDate;
            }
            set
            {
                OnExecutionDateChanging(value);
                ReportPropertyChanging("ExecutionDate");
                _ExecutionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExecutionDate");
                OnExecutionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExecutionDate;
        partial void OnExecutionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExecutionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SBForecastPlanStatusId
        {
            get
            {
                return _SBForecastPlanStatusId;
            }
            set
            {
                OnSBForecastPlanStatusIdChanging(value);
                ReportPropertyChanging("SBForecastPlanStatusId");
                _SBForecastPlanStatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SBForecastPlanStatusId");
                OnSBForecastPlanStatusIdChanged();
            }
        }
        private global::System.Int32 _SBForecastPlanStatusId;
        partial void OnSBForecastPlanStatusIdChanging(global::System.Int32 value);
        partial void OnSBForecastPlanStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UploadedFileName
        {
            get
            {
                return _UploadedFileName;
            }
            set
            {
                OnUploadedFileNameChanging(value);
                ReportPropertyChanging("UploadedFileName");
                _UploadedFileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UploadedFileName");
                OnUploadedFileNameChanged();
            }
        }
        private global::System.String _UploadedFileName;
        partial void OnUploadedFileNameChanging(global::System.String value);
        partial void OnUploadedFileNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlans_FiscalYears", "FiscalYear")]
        public FiscalYear FiscalYear
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FiscalYear>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlans_FiscalYears", "FiscalYear").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FiscalYear>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlans_FiscalYears", "FiscalYear").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FiscalYear> FiscalYearReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FiscalYear>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlans_FiscalYears", "FiscalYear");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FiscalYear>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlans_FiscalYears", "FiscalYear", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanPositions_SBForecastPlans", "SBForecastPlanPosition")]
        public EntityCollection<SBForecastPlanPosition> SBForecastPlanPositions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SBForecastPlanPosition>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanPositions_SBForecastPlans", "SBForecastPlanPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SBForecastPlanPosition>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanPositions_SBForecastPlans", "SBForecastPlanPosition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlans_SBForecastPlanStatuses", "SBForecastPlanStatus")]
        public SBForecastPlanStatus SBForecastPlanStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlanStatus>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlans_SBForecastPlanStatuses", "SBForecastPlanStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlanStatus>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlans_SBForecastPlanStatuses", "SBForecastPlanStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SBForecastPlanStatus> SBForecastPlanStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlanStatus>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlans_SBForecastPlanStatuses", "SBForecastPlanStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SBForecastPlanStatus>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlans_SBForecastPlanStatuses", "SBForecastPlanStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanModifiedGlobals_SBForecastPlans", "SBForecastPlanModifiedGlobal")]
        public EntityCollection<SBForecastPlanModifiedGlobal> SBForecastPlanModifiedGlobals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SBForecastPlanModifiedGlobal>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanModifiedGlobals_SBForecastPlans", "SBForecastPlanModifiedGlobal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SBForecastPlanModifiedGlobal>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanModifiedGlobals_SBForecastPlans", "SBForecastPlanModifiedGlobal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_SBForecastPlans", "SBForecastPlanAdjustment")]
        public EntityCollection<SBForecastPlanAdjustment> SBForecastPlanAdjustments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SBForecastPlanAdjustment>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_SBForecastPlans", "SBForecastPlanAdjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SBForecastPlanAdjustment>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_SBForecastPlans", "SBForecastPlanAdjustment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="SBForecastPlanAdjustment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SBForecastPlanAdjustment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SBForecastPlanAdjustment object.
        /// </summary>
        /// <param name="sBForecastPlanAdjustmentId">Initial value of the SBForecastPlanAdjustmentId property.</param>
        /// <param name="sBForecastPlanId">Initial value of the SBForecastPlanId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="lobId">Initial value of the LobId property.</param>
        /// <param name="hCTypeId">Initial value of the HCTypeId property.</param>
        /// <param name="gLAccountID">Initial value of the GLAccountID property.</param>
        /// <param name="expenseTypeId">Initial value of the ExpenseTypeId property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="calendarMonthId">Initial value of the CalendarMonthId property.</param>
        public static SBForecastPlanAdjustment CreateSBForecastPlanAdjustment(global::System.Int32 sBForecastPlanAdjustmentId, global::System.Int32 sBForecastPlanId, global::System.String title, global::System.Int32 lobId, global::System.Int32 hCTypeId, global::System.Int32 gLAccountID, global::System.Int32 expenseTypeId, global::System.Decimal value, global::System.Int32 calendarMonthId)
        {
            SBForecastPlanAdjustment sBForecastPlanAdjustment = new SBForecastPlanAdjustment();
            sBForecastPlanAdjustment.SBForecastPlanAdjustmentId = sBForecastPlanAdjustmentId;
            sBForecastPlanAdjustment.SBForecastPlanId = sBForecastPlanId;
            sBForecastPlanAdjustment.Title = title;
            sBForecastPlanAdjustment.LobId = lobId;
            sBForecastPlanAdjustment.HCTypeId = hCTypeId;
            sBForecastPlanAdjustment.GLAccountID = gLAccountID;
            sBForecastPlanAdjustment.ExpenseTypeId = expenseTypeId;
            sBForecastPlanAdjustment.Value = value;
            sBForecastPlanAdjustment.CalendarMonthId = calendarMonthId;
            return sBForecastPlanAdjustment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SBForecastPlanAdjustmentId
        {
            get
            {
                return _SBForecastPlanAdjustmentId;
            }
            set
            {
                if (_SBForecastPlanAdjustmentId != value)
                {
                    OnSBForecastPlanAdjustmentIdChanging(value);
                    ReportPropertyChanging("SBForecastPlanAdjustmentId");
                    _SBForecastPlanAdjustmentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SBForecastPlanAdjustmentId");
                    OnSBForecastPlanAdjustmentIdChanged();
                }
            }
        }
        private global::System.Int32 _SBForecastPlanAdjustmentId;
        partial void OnSBForecastPlanAdjustmentIdChanging(global::System.Int32 value);
        partial void OnSBForecastPlanAdjustmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SBForecastPlanId
        {
            get
            {
                return _SBForecastPlanId;
            }
            set
            {
                OnSBForecastPlanIdChanging(value);
                ReportPropertyChanging("SBForecastPlanId");
                _SBForecastPlanId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SBForecastPlanId");
                OnSBForecastPlanIdChanged();
            }
        }
        private global::System.Int32 _SBForecastPlanId;
        partial void OnSBForecastPlanIdChanging(global::System.Int32 value);
        partial void OnSBForecastPlanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyId;
        partial void OnCompanyIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CostCenterId
        {
            get
            {
                return _CostCenterId;
            }
            set
            {
                OnCostCenterIdChanging(value);
                ReportPropertyChanging("CostCenterId");
                _CostCenterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostCenterId");
                OnCostCenterIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CostCenterId;
        partial void OnCostCenterIdChanging(Nullable<global::System.Int32> value);
        partial void OnCostCenterIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LobId
        {
            get
            {
                return _LobId;
            }
            set
            {
                OnLobIdChanging(value);
                ReportPropertyChanging("LobId");
                _LobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LobId");
                OnLobIdChanged();
            }
        }
        private global::System.Int32 _LobId;
        partial void OnLobIdChanging(global::System.Int32 value);
        partial void OnLobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HCTypeId
        {
            get
            {
                return _HCTypeId;
            }
            set
            {
                OnHCTypeIdChanging(value);
                ReportPropertyChanging("HCTypeId");
                _HCTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCTypeId");
                OnHCTypeIdChanged();
            }
        }
        private global::System.Int32 _HCTypeId;
        partial void OnHCTypeIdChanging(global::System.Int32 value);
        partial void OnHCTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GLAccountID
        {
            get
            {
                return _GLAccountID;
            }
            set
            {
                OnGLAccountIDChanging(value);
                ReportPropertyChanging("GLAccountID");
                _GLAccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GLAccountID");
                OnGLAccountIDChanged();
            }
        }
        private global::System.Int32 _GLAccountID;
        partial void OnGLAccountIDChanging(global::System.Int32 value);
        partial void OnGLAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExpenseTypeId
        {
            get
            {
                return _ExpenseTypeId;
            }
            set
            {
                OnExpenseTypeIdChanging(value);
                ReportPropertyChanging("ExpenseTypeId");
                _ExpenseTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpenseTypeId");
                OnExpenseTypeIdChanged();
            }
        }
        private global::System.Int32 _ExpenseTypeId;
        partial void OnExpenseTypeIdChanging(global::System.Int32 value);
        partial void OnExpenseTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalendarMonthId
        {
            get
            {
                return _CalendarMonthId;
            }
            set
            {
                OnCalendarMonthIdChanging(value);
                ReportPropertyChanging("CalendarMonthId");
                _CalendarMonthId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CalendarMonthId");
                OnCalendarMonthIdChanged();
            }
        }
        private global::System.Int32 _CalendarMonthId;
        partial void OnCalendarMonthIdChanging(global::System.Int32 value);
        partial void OnCalendarMonthIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_ExpenseTypes", "ExpenseType")]
        public ExpenseType ExpenseType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_ExpenseTypes", "ExpenseType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_ExpenseTypes", "ExpenseType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExpenseType> ExpenseTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExpenseType>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_ExpenseTypes", "ExpenseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExpenseType>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_ExpenseTypes", "ExpenseType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_GLAccounts", "GLAccount")]
        public GLAccount GLAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GLAccount>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_GLAccounts", "GLAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GLAccount>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_GLAccounts", "GLAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GLAccount> GLAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GLAccount>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_GLAccounts", "GLAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GLAccount>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_GLAccounts", "GLAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_HCTypes", "HCType")]
        public HCType HCType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCType>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_HCTypes", "HCType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCType>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_HCTypes", "HCType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCType> HCTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCType>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_HCTypes", "HCType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCType>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_HCTypes", "HCType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_SBForecastPlans", "SBForecastPlan")]
        public SBForecastPlan SBForecastPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlan>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_SBForecastPlans", "SBForecastPlan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlan>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_SBForecastPlans", "SBForecastPlan").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SBForecastPlan> SBForecastPlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlan>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_SBForecastPlans", "SBForecastPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SBForecastPlan>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_SBForecastPlans", "SBForecastPlan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_CostCenters", "CostCenter")]
        public CostCenter CostCenter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostCenter>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_CostCenters", "CostCenter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostCenter>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_CostCenters", "CostCenter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CostCenter> CostCenterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostCenter>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_CostCenters", "CostCenter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CostCenter>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_CostCenters", "CostCenter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_Lobs", "Lob")]
        public Lob Lob
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lob>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_Lobs", "Lob").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lob>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_Lobs", "Lob").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lob> LobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lob>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_Lobs", "Lob");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lob>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_Lobs", "Lob", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanAdjustments_Lobs1", "Lob")]
        public Lob Lob1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lob>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_Lobs1", "Lob").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lob>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_Lobs1", "Lob").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lob> Lob1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lob>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_Lobs1", "Lob");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lob>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanAdjustments_Lobs1", "Lob", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="SBForecastPlanData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SBForecastPlanData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SBForecastPlanData object.
        /// </summary>
        /// <param name="sBForecastPlanDataID">Initial value of the SBForecastPlanDataID property.</param>
        /// <param name="sBForecastPlanPositionId">Initial value of the SBForecastPlanPositionId property.</param>
        /// <param name="parameterDataTypeID">Initial value of the ParameterDataTypeID property.</param>
        /// <param name="month">Initial value of the Month property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static SBForecastPlanData CreateSBForecastPlanData(global::System.Int32 sBForecastPlanDataID, global::System.Int32 sBForecastPlanPositionId, global::System.Int32 parameterDataTypeID, global::System.Int32 month, global::System.Decimal value)
        {
            SBForecastPlanData sBForecastPlanData = new SBForecastPlanData();
            sBForecastPlanData.SBForecastPlanDataID = sBForecastPlanDataID;
            sBForecastPlanData.SBForecastPlanPositionId = sBForecastPlanPositionId;
            sBForecastPlanData.ParameterDataTypeID = parameterDataTypeID;
            sBForecastPlanData.Month = month;
            sBForecastPlanData.Value = value;
            return sBForecastPlanData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SBForecastPlanDataID
        {
            get
            {
                return _SBForecastPlanDataID;
            }
            set
            {
                if (_SBForecastPlanDataID != value)
                {
                    OnSBForecastPlanDataIDChanging(value);
                    ReportPropertyChanging("SBForecastPlanDataID");
                    _SBForecastPlanDataID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SBForecastPlanDataID");
                    OnSBForecastPlanDataIDChanged();
                }
            }
        }
        private global::System.Int32 _SBForecastPlanDataID;
        partial void OnSBForecastPlanDataIDChanging(global::System.Int32 value);
        partial void OnSBForecastPlanDataIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SBForecastPlanPositionId
        {
            get
            {
                return _SBForecastPlanPositionId;
            }
            set
            {
                OnSBForecastPlanPositionIdChanging(value);
                ReportPropertyChanging("SBForecastPlanPositionId");
                _SBForecastPlanPositionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SBForecastPlanPositionId");
                OnSBForecastPlanPositionIdChanged();
            }
        }
        private global::System.Int32 _SBForecastPlanPositionId;
        partial void OnSBForecastPlanPositionIdChanging(global::System.Int32 value);
        partial void OnSBForecastPlanPositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterDataTypeID
        {
            get
            {
                return _ParameterDataTypeID;
            }
            set
            {
                OnParameterDataTypeIDChanging(value);
                ReportPropertyChanging("ParameterDataTypeID");
                _ParameterDataTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParameterDataTypeID");
                OnParameterDataTypeIDChanged();
            }
        }
        private global::System.Int32 _ParameterDataTypeID;
        partial void OnParameterDataTypeIDChanging(global::System.Int32 value);
        partial void OnParameterDataTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private global::System.Int32 _Month;
        partial void OnMonthChanging(global::System.Int32 value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Decimal _Value;
        partial void OnValueChanging(global::System.Decimal value);
        partial void OnValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanData_ParameterDataType", "ParameterDataType")]
        public ParameterDataType ParameterDataType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParameterDataType>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanData_ParameterDataType", "ParameterDataType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParameterDataType>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanData_ParameterDataType", "ParameterDataType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParameterDataType> ParameterDataTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParameterDataType>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanData_ParameterDataType", "ParameterDataType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParameterDataType>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanData_ParameterDataType", "ParameterDataType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanData_SBForecastPlanPositions", "SBForecastPlanPosition")]
        public SBForecastPlanPosition SBForecastPlanPosition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlanPosition>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanData_SBForecastPlanPositions", "SBForecastPlanPosition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlanPosition>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanData_SBForecastPlanPositions", "SBForecastPlanPosition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SBForecastPlanPosition> SBForecastPlanPositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlanPosition>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanData_SBForecastPlanPositions", "SBForecastPlanPosition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SBForecastPlanPosition>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanData_SBForecastPlanPositions", "SBForecastPlanPosition", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="SBForecastPlanLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SBForecastPlanLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SBForecastPlanLog object.
        /// </summary>
        /// <param name="sBForecastPlanLogId">Initial value of the SBForecastPlanLogId property.</param>
        /// <param name="sBForecastPlanId">Initial value of the SBForecastPlanId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        public static SBForecastPlanLog CreateSBForecastPlanLog(global::System.Int32 sBForecastPlanLogId, global::System.Int32 sBForecastPlanId, global::System.DateTime date, global::System.Int32 typeId, global::System.String message)
        {
            SBForecastPlanLog sBForecastPlanLog = new SBForecastPlanLog();
            sBForecastPlanLog.SBForecastPlanLogId = sBForecastPlanLogId;
            sBForecastPlanLog.SBForecastPlanId = sBForecastPlanId;
            sBForecastPlanLog.Date = date;
            sBForecastPlanLog.TypeId = typeId;
            sBForecastPlanLog.Message = message;
            return sBForecastPlanLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SBForecastPlanLogId
        {
            get
            {
                return _SBForecastPlanLogId;
            }
            set
            {
                if (_SBForecastPlanLogId != value)
                {
                    OnSBForecastPlanLogIdChanging(value);
                    ReportPropertyChanging("SBForecastPlanLogId");
                    _SBForecastPlanLogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SBForecastPlanLogId");
                    OnSBForecastPlanLogIdChanged();
                }
            }
        }
        private global::System.Int32 _SBForecastPlanLogId;
        partial void OnSBForecastPlanLogIdChanging(global::System.Int32 value);
        partial void OnSBForecastPlanLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SBForecastPlanId
        {
            get
            {
                return _SBForecastPlanId;
            }
            set
            {
                OnSBForecastPlanIdChanging(value);
                ReportPropertyChanging("SBForecastPlanId");
                _SBForecastPlanId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SBForecastPlanId");
                OnSBForecastPlanIdChanged();
            }
        }
        private global::System.Int32 _SBForecastPlanId;
        partial void OnSBForecastPlanIdChanging(global::System.Int32 value);
        partial void OnSBForecastPlanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private global::System.Int32 _TypeId;
        partial void OnTypeIdChanging(global::System.Int32 value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="SBForecastPlanModifiedGlobal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SBForecastPlanModifiedGlobal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SBForecastPlanModifiedGlobal object.
        /// </summary>
        /// <param name="sBForecastPlanModifiedGlobalId">Initial value of the SBForecastPlanModifiedGlobalId property.</param>
        /// <param name="sBForecastPlanId">Initial value of the SBForecastPlanId property.</param>
        /// <param name="parameterId">Initial value of the ParameterId property.</param>
        public static SBForecastPlanModifiedGlobal CreateSBForecastPlanModifiedGlobal(global::System.Int32 sBForecastPlanModifiedGlobalId, global::System.Int32 sBForecastPlanId, global::System.Int32 parameterId)
        {
            SBForecastPlanModifiedGlobal sBForecastPlanModifiedGlobal = new SBForecastPlanModifiedGlobal();
            sBForecastPlanModifiedGlobal.SBForecastPlanModifiedGlobalId = sBForecastPlanModifiedGlobalId;
            sBForecastPlanModifiedGlobal.SBForecastPlanId = sBForecastPlanId;
            sBForecastPlanModifiedGlobal.ParameterId = parameterId;
            return sBForecastPlanModifiedGlobal;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SBForecastPlanModifiedGlobalId
        {
            get
            {
                return _SBForecastPlanModifiedGlobalId;
            }
            set
            {
                if (_SBForecastPlanModifiedGlobalId != value)
                {
                    OnSBForecastPlanModifiedGlobalIdChanging(value);
                    ReportPropertyChanging("SBForecastPlanModifiedGlobalId");
                    _SBForecastPlanModifiedGlobalId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SBForecastPlanModifiedGlobalId");
                    OnSBForecastPlanModifiedGlobalIdChanged();
                }
            }
        }
        private global::System.Int32 _SBForecastPlanModifiedGlobalId;
        partial void OnSBForecastPlanModifiedGlobalIdChanging(global::System.Int32 value);
        partial void OnSBForecastPlanModifiedGlobalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SBForecastPlanId
        {
            get
            {
                return _SBForecastPlanId;
            }
            set
            {
                OnSBForecastPlanIdChanging(value);
                ReportPropertyChanging("SBForecastPlanId");
                _SBForecastPlanId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SBForecastPlanId");
                OnSBForecastPlanIdChanged();
            }
        }
        private global::System.Int32 _SBForecastPlanId;
        partial void OnSBForecastPlanIdChanging(global::System.Int32 value);
        partial void OnSBForecastPlanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParameterId
        {
            get
            {
                return _ParameterId;
            }
            set
            {
                OnParameterIdChanging(value);
                ReportPropertyChanging("ParameterId");
                _ParameterId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParameterId");
                OnParameterIdChanged();
            }
        }
        private global::System.Int32 _ParameterId;
        partial void OnParameterIdChanging(global::System.Int32 value);
        partial void OnParameterIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanModifiedGlobals_Parameters", "Parameter")]
        public Parameter Parameter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanModifiedGlobals_Parameters", "Parameter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanModifiedGlobals_Parameters", "Parameter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parameter> ParameterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanModifiedGlobals_Parameters", "Parameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parameter>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanModifiedGlobals_Parameters", "Parameter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanModifiedGlobals_SBForecastPlans", "SBForecastPlan")]
        public SBForecastPlan SBForecastPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlan>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanModifiedGlobals_SBForecastPlans", "SBForecastPlan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlan>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanModifiedGlobals_SBForecastPlans", "SBForecastPlan").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SBForecastPlan> SBForecastPlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlan>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanModifiedGlobals_SBForecastPlans", "SBForecastPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SBForecastPlan>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanModifiedGlobals_SBForecastPlans", "SBForecastPlan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ModifiedGlobalsMonthValues_SBForecastPlanModifiedGlobals", "ModifiedGlobalsMonthValue")]
        public EntityCollection<ModifiedGlobalsMonthValue> ModifiedGlobalsMonthValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ModifiedGlobalsMonthValue>("DisneyHCMLatamPlanningDevModel.FK_ModifiedGlobalsMonthValues_SBForecastPlanModifiedGlobals", "ModifiedGlobalsMonthValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ModifiedGlobalsMonthValue>("DisneyHCMLatamPlanningDevModel.FK_ModifiedGlobalsMonthValues_SBForecastPlanModifiedGlobals", "ModifiedGlobalsMonthValue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="SBForecastPlanPosition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SBForecastPlanPosition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SBForecastPlanPosition object.
        /// </summary>
        /// <param name="sBForecastPlanPositionId">Initial value of the SBForecastPlanPositionId property.</param>
        /// <param name="sBForecastPlanId">Initial value of the SBForecastPlanId property.</param>
        /// <param name="hCPositionLogId">Initial value of the HCPositionLogId property.</param>
        public static SBForecastPlanPosition CreateSBForecastPlanPosition(global::System.Int32 sBForecastPlanPositionId, global::System.Int32 sBForecastPlanId, global::System.Int32 hCPositionLogId)
        {
            SBForecastPlanPosition sBForecastPlanPosition = new SBForecastPlanPosition();
            sBForecastPlanPosition.SBForecastPlanPositionId = sBForecastPlanPositionId;
            sBForecastPlanPosition.SBForecastPlanId = sBForecastPlanId;
            sBForecastPlanPosition.HCPositionLogId = hCPositionLogId;
            return sBForecastPlanPosition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SBForecastPlanPositionId
        {
            get
            {
                return _SBForecastPlanPositionId;
            }
            set
            {
                if (_SBForecastPlanPositionId != value)
                {
                    OnSBForecastPlanPositionIdChanging(value);
                    ReportPropertyChanging("SBForecastPlanPositionId");
                    _SBForecastPlanPositionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SBForecastPlanPositionId");
                    OnSBForecastPlanPositionIdChanged();
                }
            }
        }
        private global::System.Int32 _SBForecastPlanPositionId;
        partial void OnSBForecastPlanPositionIdChanging(global::System.Int32 value);
        partial void OnSBForecastPlanPositionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SBForecastPlanId
        {
            get
            {
                return _SBForecastPlanId;
            }
            set
            {
                OnSBForecastPlanIdChanging(value);
                ReportPropertyChanging("SBForecastPlanId");
                _SBForecastPlanId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SBForecastPlanId");
                OnSBForecastPlanIdChanged();
            }
        }
        private global::System.Int32 _SBForecastPlanId;
        partial void OnSBForecastPlanIdChanging(global::System.Int32 value);
        partial void OnSBForecastPlanIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HCPositionLogId
        {
            get
            {
                return _HCPositionLogId;
            }
            set
            {
                OnHCPositionLogIdChanging(value);
                ReportPropertyChanging("HCPositionLogId");
                _HCPositionLogId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCPositionLogId");
                OnHCPositionLogIdChanged();
            }
        }
        private global::System.Int32 _HCPositionLogId;
        partial void OnHCPositionLogIdChanging(global::System.Int32 value);
        partial void OnHCPositionLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeLogId
        {
            get
            {
                return _EmployeeLogId;
            }
            set
            {
                OnEmployeeLogIdChanging(value);
                ReportPropertyChanging("EmployeeLogId");
                _EmployeeLogId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeLogId");
                OnEmployeeLogIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeLogId;
        partial void OnEmployeeLogIdChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeLogIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanPositions_SBForecastPlans", "SBForecastPlan")]
        public SBForecastPlan SBForecastPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlan>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanPositions_SBForecastPlans", "SBForecastPlan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlan>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanPositions_SBForecastPlans", "SBForecastPlan").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SBForecastPlan> SBForecastPlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SBForecastPlan>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanPositions_SBForecastPlans", "SBForecastPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SBForecastPlan>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanPositions_SBForecastPlans", "SBForecastPlan", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanData_SBForecastPlanPositions", "SBForecastPlanData")]
        public EntityCollection<SBForecastPlanData> SBForecastPlanDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SBForecastPlanData>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanData_SBForecastPlanPositions", "SBForecastPlanData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SBForecastPlanData>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanData_SBForecastPlanPositions", "SBForecastPlanData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanPositions_HCPositionLogs", "HCPositionLog")]
        public HCPositionLog HCPositionLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCPositionLog>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanPositions_HCPositionLogs", "HCPositionLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCPositionLog>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanPositions_HCPositionLogs", "HCPositionLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCPositionLog> HCPositionLogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCPositionLog>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanPositions_HCPositionLogs", "HCPositionLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCPositionLog>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanPositions_HCPositionLogs", "HCPositionLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlanPositions_EmployeeLogs", "EmployeeLog")]
        public EmployeeLog EmployeeLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeLog>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanPositions_EmployeeLogs", "EmployeeLog").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeLog>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanPositions_EmployeeLogs", "EmployeeLog").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeLog> EmployeeLogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeLog>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanPositions_EmployeeLogs", "EmployeeLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeLog>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlanPositions_EmployeeLogs", "EmployeeLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_ConceptResults_SBForecastPlanPositions", "ConceptResult")]
        public EntityCollection<ConceptResult> ConceptResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConceptResult>("DisneyHCMLatamPlanningDevModel.FK_ConceptResults_SBForecastPlanPositions", "ConceptResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConceptResult>("DisneyHCMLatamPlanningDevModel.FK_ConceptResults_SBForecastPlanPositions", "ConceptResult", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="SBForecastPlanStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SBForecastPlanStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SBForecastPlanStatus object.
        /// </summary>
        /// <param name="sBForecastPlanStatusID">Initial value of the SBForecastPlanStatusID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static SBForecastPlanStatus CreateSBForecastPlanStatus(global::System.Int32 sBForecastPlanStatusID, global::System.String description)
        {
            SBForecastPlanStatus sBForecastPlanStatus = new SBForecastPlanStatus();
            sBForecastPlanStatus.SBForecastPlanStatusID = sBForecastPlanStatusID;
            sBForecastPlanStatus.Description = description;
            return sBForecastPlanStatus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SBForecastPlanStatusID
        {
            get
            {
                return _SBForecastPlanStatusID;
            }
            set
            {
                if (_SBForecastPlanStatusID != value)
                {
                    OnSBForecastPlanStatusIDChanging(value);
                    ReportPropertyChanging("SBForecastPlanStatusID");
                    _SBForecastPlanStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SBForecastPlanStatusID");
                    OnSBForecastPlanStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _SBForecastPlanStatusID;
        partial void OnSBForecastPlanStatusIDChanging(global::System.Int32 value);
        partial void OnSBForecastPlanStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_SBForecastPlans_SBForecastPlanStatuses", "SBForecastPlan")]
        public EntityCollection<SBForecastPlan> SBForecastPlans
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SBForecastPlan>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlans_SBForecastPlanStatuses", "SBForecastPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SBForecastPlan>("DisneyHCMLatamPlanningDevModel.FK_SBForecastPlans_SBForecastPlanStatuses", "SBForecastPlan", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DisneyHCMLatamPlanningDevModel", Name="Scheme")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Scheme : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Scheme object.
        /// </summary>
        /// <param name="schemeId">Initial value of the SchemeId property.</param>
        /// <param name="hCTypeId">Initial value of the HCTypeId property.</param>
        /// <param name="companyId">Initial value of the CompanyId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Scheme CreateScheme(global::System.Int32 schemeId, global::System.Int32 hCTypeId, global::System.Int32 companyId, global::System.String userName, global::System.DateTime creationDate, global::System.Boolean isActive)
        {
            Scheme scheme = new Scheme();
            scheme.SchemeId = schemeId;
            scheme.HCTypeId = hCTypeId;
            scheme.CompanyId = companyId;
            scheme.UserName = userName;
            scheme.CreationDate = creationDate;
            scheme.IsActive = isActive;
            return scheme;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SchemeId
        {
            get
            {
                return _SchemeId;
            }
            set
            {
                if (_SchemeId != value)
                {
                    OnSchemeIdChanging(value);
                    ReportPropertyChanging("SchemeId");
                    _SchemeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SchemeId");
                    OnSchemeIdChanged();
                }
            }
        }
        private global::System.Int32 _SchemeId;
        partial void OnSchemeIdChanging(global::System.Int32 value);
        partial void OnSchemeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HCTypeId
        {
            get
            {
                return _HCTypeId;
            }
            set
            {
                OnHCTypeIdChanging(value);
                ReportPropertyChanging("HCTypeId");
                _HCTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCTypeId");
                OnHCTypeIdChanged();
            }
        }
        private global::System.Int32 _HCTypeId;
        partial void OnHCTypeIdChanging(global::System.Int32 value);
        partial void OnHCTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyId
        {
            get
            {
                return _CompanyId;
            }
            set
            {
                OnCompanyIdChanging(value);
                ReportPropertyChanging("CompanyId");
                _CompanyId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyId");
                OnCompanyIdChanged();
            }
        }
        private global::System.Int32 _CompanyId;
        partial void OnCompanyIdChanging(global::System.Int32 value);
        partial void OnCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModifiedUserName
        {
            get
            {
                return _ModifiedUserName;
            }
            set
            {
                OnModifiedUserNameChanging(value);
                ReportPropertyChanging("ModifiedUserName");
                _ModifiedUserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModifiedUserName");
                OnModifiedUserNameChanged();
            }
        }
        private global::System.String _ModifiedUserName;
        partial void OnModifiedUserNameChanging(global::System.String value);
        partial void OnModifiedUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModificationDate
        {
            get
            {
                return _ModificationDate;
            }
            set
            {
                OnModificationDateChanging(value);
                ReportPropertyChanging("ModificationDate");
                _ModificationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModificationDate");
                OnModificationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModificationDate;
        partial void OnModificationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModificationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Schemes_HCTypes", "HCType")]
        public HCType HCType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCType>("DisneyHCMLatamPlanningDevModel.FK_Schemes_HCTypes", "HCType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCType>("DisneyHCMLatamPlanningDevModel.FK_Schemes_HCTypes", "HCType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCType> HCTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCType>("DisneyHCMLatamPlanningDevModel.FK_Schemes_HCTypes", "HCType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCType>("DisneyHCMLatamPlanningDevModel.FK_Schemes_HCTypes", "HCType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Schemes_Companies", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_Schemes_Companies", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_Schemes_Companies", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_Schemes_Companies", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("DisneyHCMLatamPlanningDevModel.FK_Schemes_Companies", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DisneyHCMLatamPlanningDevModel", "FK_Concepts_Schemes", "Concept")]
        public EntityCollection<Concept> Concepts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Concept>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Schemes", "Concept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Concept>("DisneyHCMLatamPlanningDevModel.FK_Concepts_Schemes", "Concept", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
